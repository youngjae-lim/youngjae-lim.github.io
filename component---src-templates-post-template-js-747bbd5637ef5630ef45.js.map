{"version":3,"sources":["webpack://youngjae-lim.github.io/./src/components/PrevAndNext.js","webpack://youngjae-lim.github.io/./src/components/Comments.js","webpack://youngjae-lim.github.io/./src/components/YouMightAlsoLike.js","webpack://youngjae-lim.github.io/./src/templates/post-template.js"],"names":["Wrapper","styled","InnerWrapper","prev","next","prevTitle","frontmatter","title","prevSlug","slug","nextTitle","nextSlug","to","rel","COMMENTS_ID","useEffect","script","document","createElement","src","setAttribute","process","async","comments","getElementById","appendChild","innerHTML","id","posts","tag","map","post","key","data","pageContext","url","window","location","href","pathName","pathname","mdx","tags","image","date","embeddedImages","videoSourceURL","videoTitle","previousPost","nextPost","relatedPosts","body","tableOfContents","excerpt","description","isThereTableOfContent","Object","keys","length","Layout","Seo","childImageSharp","resize","toc","TableOfContents","items","className","G","getImage","alt","TagsList","isPost","SocialShareButtons","MDXRenderer","Banner","props"],"mappings":"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","file":"component---src-templates-post-template-js-747bbd5637ef5630ef45.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa'\n\nconst PrevAndNext = ({ prev, next }) => {\n  const prevTitle = prev?.frontmatter.title || ''\n  const prevSlug = prev?.frontmatter.slug || ''\n\n  const nextTitle = next?.frontmatter.title || ''\n  const nextSlug = next?.frontmatter.slug || ''\n\n  return (\n    <Wrapper>\n      {next ? (\n        <InnerWrapper>\n          <div>\n            <FaAngleLeft />\n            Next\n          </div>\n          <Link to={`/posts/${nextSlug}`} rel='next'>\n            {nextTitle}\n          </Link>\n        </InnerWrapper>\n      ) : (\n        <div></div>\n      )}\n      {prev ? (\n        <InnerWrapper>\n          <div>\n            Previous\n            <FaAngleRight />\n          </div>\n          <Link to={`/posts/${prevSlug}`} rel='prev'>\n            {prevTitle}\n          </Link>\n        </InnerWrapper>\n      ) : (\n        <div></div>\n      )}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  justify-content: space-between;\n  div:last-child {\n    text-align: right;\n    margin-left: 8px;\n  }\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    div:last-child {\n      margin-left: 0;\n      margin-top: 8px;\n    }\n  }\n`\n\nconst InnerWrapper = styled.div`\n  background-color: var(--clr-green-5);\n  border-radius: 8px;\n  padding: 8px 16px;\n  font-size: 14px;\n  border: 0.3px solid var(--clr-green-4);\n  width: 100%;\n  max-width: 300px;\n  box-sizing: border-box;\n  @media screen and (max-width: 500px) {\n    max-width: 100%;\n  }\n`\n\nexport default PrevAndNext\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\n\nconst COMMENTS_ID = 'comments-container'\n\nconst Comments = () => {\n  useEffect(() => {\n    if (!process.env.GATSBY_COMMENTS_REPO) return\n\n    const script = document.createElement('script')\n    script.src = 'https://utteranc.es/client.js'\n    script.setAttribute('repo', process.env.GATSBY_COMMENTS_REPO)\n    script.setAttribute('issue-term', 'pathname')\n    script.setAttribute('theme', 'icy-dark')\n    script.setAttribute('crossorigin', 'anonymous')\n    script.async = true\n\n    const comments = document.getElementById(COMMENTS_ID)\n    if (comments) comments.appendChild(script)\n\n    // This function will get called when the component unmounts\n    // To make sure we don't end up with multiple instances of the comments component\n    return () => {\n      const comments = document.getElementById(COMMENTS_ID)\n      if (comments) comments.innerHTML = ''\n    }\n  }, [])\n\n  return (\n    <Wrapper>\n      <h4>Comments</h4>\n      <div id={COMMENTS_ID} />\n    </Wrapper>\n  )\n}\n\nexport default Comments\n\nconst Wrapper = styled.div`\n  h4 {\n    margin-bottom: 1rem;\n  }\n  div {\n    background-color: var(--clr-green-5);\n    border-radius: var(--radius-2);\n    border: 0.3px solid var(--clr-green-4);\n  }\n\n  /* .utterances { */\n  /*   margin: -16px 0; */\n  /*   padding: 0 -4px; */\n  /* } */\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst YouMightAlsoLike = ({ posts, tag }) => {\n  return (\n    <Wrapper>\n      <p>\n        You might also like posts tagged with{' '}\n        <Link to={`/tags/${tag}`}>#{tag}</Link>:\n      </p>\n      <ul>\n        {posts.map(post => (\n          <li key={post.id}>\n            <Link to={`/posts/${post.frontmatter.slug}`}>\n              {post.frontmatter.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Wrapper>\n  )\n}\n\nexport default YouMightAlsoLike\n\nconst Wrapper = styled.div`\n  background-color: var(--clr-green-5);\n  margin-top: 1rem;\n  padding: 1rem 1rem 0 1rem;\n  border: 0.3px solid var(--clr-green-4);\n  border-radius: var(--radius-2);\n\n  p {\n    font-weight: bold;\n  }\n\n  a {\n    text-decoration: underline;\n  }\n`\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport TagsList from '../components/TagsList'\nimport TableOfContents from '../components/TableOfContents'\nimport Seo from '../components/Seo'\nimport Banner from '../components/Banner'\nimport PrevAndNext from '../components/PrevAndNext'\nimport Comments from '../components/Comments'\nimport SocialShareButtons from '../components/SocialShareButtons'\nimport YouMightAlsoLike from '../components/YouMightAlsoLike'\nimport styled from 'styled-components'\nimport { graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\n\nconst PostTemplate = ({ data, pageContext }) => {\n  const url = typeof window !== 'undefined' ? window.location.href : ''\n  const pathName = typeof window !== 'undefined' ? window.location.pathname : ''\n\n  const {\n    title,\n    tags,\n    image,\n    date,\n    embeddedImages,\n    videoSourceURL,\n    videoTitle,\n  } = data.mdx.frontmatter\n\n  const { previousPost, nextPost, relatedPosts } = pageContext\n\n  const { body, tableOfContents, excerpt } = data.mdx\n\n  const description = title ? title : excerpt\n\n  const isThereTableOfContent = Object.keys(tableOfContents).length !== 0\n\n  return (\n    <Layout>\n      <Seo\n        title={title}\n        description={excerpt}\n        image={image?.childImageSharp.resize}\n        pathname={pathName}\n      />\n      <Wrapper toc={isThereTableOfContent}>\n        {/* Table of Contents */}\n        {isThereTableOfContent && (\n          <TableOfContents items={tableOfContents.items} />\n        )}\n        {/* Post Info */}\n        <article className='mdx-page'>\n          <GatsbyImage\n            image={getImage(image)}\n            alt={title}\n            className='main-img'\n          />\n          <div className='post-info'>\n            <h1>{title}</h1>\n            {tags?.length > 0 && <TagsList tags={tags} isPost={true} />}\n            <p>{date}</p>\n            <div className='underline' />\n            <div className='social-buttons-top'>\n              <SocialShareButtons url={url} description={description} />\n            </div>\n          </div>\n          <MDXRenderer\n            embeddedImages={embeddedImages}\n            videoSourceURL={videoSourceURL}\n            videoTitle={videoTitle}\n          >\n            {body}\n          </MDXRenderer>\n          <div className='social-buttons'>\n            <span>If you found this article informative, please share: </span>\n            <SocialShareButtons url={url} description={description} />\n          </div>\n          <PrevAndNext prev={previousPost} next={nextPost} />\n          {relatedPosts?.length > 0 && (\n            <YouMightAlsoLike posts={relatedPosts} tag={tags[0]} />\n          )}\n          <Comments />\n        </article>\n\n        {/* Banner on the right side */}\n        <article>\n          <Banner isPost={true} />\n        </article>\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport default PostTemplate\n\nexport const query = graphql`\n  query GetSinglePostBySlug($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      body\n      tableOfContents\n      frontmatter {\n        title\n        author\n        category\n        tags\n        slug\n        date(formatString: \"MMMM Do, YYYY\")\n        readTime\n        image {\n          childImageSharp {\n            gatsbyImageData\n            resize(width: 1200) {\n              src\n              width\n              height\n            }\n          }\n        }\n        embeddedImages {\n          childImageSharp {\n            gatsbyImageData(quality: 100)\n          }\n        }\n        videoSourceURL\n        videoTitle\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`\n\nconst Wrapper = styled.section`\n  display: grid;\n  width: 90vw;\n  max-width: ${props => (props.toc ? '1600px' : '1100px')};\n  margin: 4rem auto 4rem;\n\n  .post-info {\n    margin: 2rem 0 3rem 0;\n    text-align: center;\n    span {\n      background: var(--clr-green-1);\n      color: black;\n      border-radius: var(--radius);\n      padding: 0.25rem 0.5rem;\n      text-transform: uppercase;\n      letter-spacing: var(--spacing);\n    }\n    h1 {\n      margin: 1.25rem 0;\n      font-weight: 900;\n    }\n    p {\n      color: var(--clr-white);\n    }\n    .underline {\n      width: 5rem;\n      height: 1px;\n      background: var(--clr-grey-9);\n      margin: 0 auto;\n      margin-bottom: 1rem;\n    }\n  }\n\n  .post-nav {\n    span {\n      color: white;\n      border-bottom: 1px solid #ddd;\n    }\n  }\n  .social-buttons-top {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n  }\n\n  .social-buttons {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    gap: 1rem;\n    font-size: 1.6rem;\n  }\n\n  @media (min-width: 992px) {\n    & {\n      display: grid;\n      width: 92vw;\n    }\n    .main-img {\n      width: 100%;\n      display: block;\n      margin: 0 auto;\n    }\n  }\n  @media (min-width: 1170px) {\n    & {\n      display: grid;\n      grid-template-columns: ${props =>\n        props.toc ? '350px 1fr 200px' : '1fr 300px'};\n      column-gap: 4rem;\n      justify-content: space-around;\n    }\n  }\n`\n"],"sourceRoot":""}