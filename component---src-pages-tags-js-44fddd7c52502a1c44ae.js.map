{"version":3,"sources":["webpack://youngjae-lim.github.io/./src/components/Banner/Title.js","webpack://youngjae-lim.github.io/./src/components/Banner/About.js","webpack://youngjae-lim.github.io/./src/components/Banner/Recent.js","webpack://youngjae-lim.github.io/./src/components/Banner/BannerTags.js","webpack://youngjae-lim.github.io/./src/components/Banner/index.js","webpack://youngjae-lim.github.io/./src/components/Posts/PostCard.js","webpack://youngjae-lim.github.io/./src/components/Posts/SlimPostCard.js","webpack://youngjae-lim.github.io/./src/components/Posts/PostCardList.js","webpack://youngjae-lim.github.io/./src/components/Accordion.js","webpack://youngjae-lim.github.io/./src/components/ToggleViewButton.js","webpack://youngjae-lim.github.io/./src/components/Posts/index.js","webpack://youngjae-lim.github.io/./src/components/Projects/ProjectCard.js","webpack://youngjae-lim.github.io/./src/components/Tags.js","webpack://youngjae-lim.github.io/./src/components/TagsList.js","webpack://youngjae-lim.github.io/./src/pages/tags.js"],"names":["Wrapper","styled","title","className","S","src","layout","width","height","alt","styleClass","posts","useStaticQuery","allMdx","nodes","map","post","frontmatter","slug","date","image","key","id","to","G","getImage","Tags","isPost","props","excerpt","tags","readTime","length","TagsList","isSlim","category","ProjectCard","children","useState","isActive","setIsActive","onClick","context","changeView","count","console","log","undefined","Banner","group","tag","index","fieldValue","totalCount","data","allPosts"],"mappings":"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","file":"component---src-pages-tags-js-44fddd7c52502a1c44ae.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Title = ({ title }) => {\n  return (\n    <Wrapper>\n      <h4>{title}</h4>\n      <div className='line'></div>\n    </Wrapper>\n  )\n}\nconst Wrapper = styled.div`\n  position: relative;\n  text-align: center;\n  margin-bottom: 1.25rem;\n  h4 {\n    color: var(--clr-white);\n    text-transform: uppercase;\n    font-weight: 500;\n    background: var(--);\n    display: inline-block;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0 0.6rem;\n  }\n  .line {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    height: 1.5px;\n    /* transform: translateY(-50%); */\n    background: var(--clr-white);\n    z-index: -1;\n  }\n`\nexport default Title\n","import React from 'react'\nimport SocialLinks from '../../constants/socialLinks'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport Title from './Title'\nimport styled from 'styled-components'\n\nconst About = () => {\n  return (\n    <Wrapper>\n      <Title title='about me' />\n      <StaticImage\n        src='../../assets/profile.jpg'\n        layout='fixed'\n        width={130}\n        height={130}\n        className='img'\n        alt='profile'\n      />\n      <p>\n        I am a full stack software engineer/data analyst from NYC who is seeking\n        remote/freelancing/full-time opportunities. I am passionate about\n        collecting, processing, exploring, and publishing data and building\n        anything involving modern web technology. When I am not at my computer,\n        I am a photographer as well.\n      </p>\n      <SocialLinks styleClass='banner-icons' />\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  text-align: center;\n  p {\n    color: var(--clr-white);\n  }\n  .img {\n    border-radius: 50%;\n    margin: 0 auto;\n    margin-bottom: 1rem;\n  }\n`\nexport default About\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport Title from './Title'\n\nconst Recent = () => {\n  const data = useStaticQuery(graphql`\n    query GetFiveLastestPosts {\n      allMdx(\n        filter: { frontmatter: { category: { ne: \"PROJECT\" } } }\n        limit: 5\n        sort: { fields: frontmatter___date, order: DESC }\n      ) {\n        nodes {\n          id\n          frontmatter {\n            title\n            slug\n            date(formatString: \"MMMM Do, YYYY\")\n            image {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const {\n    allMdx: { nodes: posts },\n  } = data\n\n  return (\n    <Wrapper>\n      <Title title='recent' />\n      {posts.map(post => {\n        const { title, slug, date, image } = post.frontmatter\n\n        return (\n          <Link key={post.id} to={`/posts/${slug}`} className='post'>\n            <GatsbyImage image={getImage(image)} alt={title} className='img' />\n            <div>\n              <h5>{title}</h5>\n              <p>{date}</p>\n            </div>\n          </Link>\n        )\n      })}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  .post {\n    display: grid;\n    grid-template-columns: 75px 1fr;\n    column-gap: 1rem;\n    margin-bottom: 1rem;\n  }\n  .img {\n    border-radius: var(--radius);\n  }\n  h5 {\n    font-size: 0.7rem;\n    margin-bottom: 0.25rem;\n    letter-spacing: 0;\n    line-height: 1.2;\n    color: var(--clr-white);\n  }\n  p {\n    font-size: 0.6rem;\n    margin-bottom: 0;\n    color: var(--clr-grey-5);\n  }\n  .post:hover {\n    h5 {\n      color: var(--clr-link-hover);\n    }\n  }\n`\n\nexport default Recent\n","import React from 'react'\nimport styled from 'styled-components'\nimport Tags from '../Tags'\nimport Title from './Title'\n\nconst BannerTags = () => {\n  return (\n    <Wrapper>\n      <Title title='Tags' />\n      <Tags />\n    </Wrapper>\n  )\n}\nconst Wrapper = styled.div`\n  /* .tag { */\n  /*   font-size: 1rem; */\n  /*   color: var(--clr-white); */\n  /*   text-transform: capitalize; */\n  /*   display: block; */\n  /*   padding-left: 1rem; */\n  /*   letter-spacing: var(--spacing); */\n  /*   transition: var(--transition); */\n  /*   border-radius: var(--radius); */\n  /* } */\n  /* .tag:hover { */\n  /*   background: var(--category-hover); */\n  /*   color: var(--clr-link-hover); */\n  /* } */\n`\nexport default BannerTags\n","import React from 'react'\nimport styled from 'styled-components'\nimport About from './About'\nimport Recent from './Recent'\n// import BannerCategories from './BannerCategories'\nimport BannerTags from './BannerTags'\n\nconst Banner = ({ isPost }) => {\n  return (\n    <Wrapper isPost={isPost}>\n      <About />\n      <Recent />\n      {/* <BannerCategories /> */}\n      <BannerTags />\n    </Wrapper>\n  )\n}\n\nexport default Banner\n\nconst Wrapper = styled.aside`\n  display: grid;\n  margin-top: ${props =>\n    props.isPost\n      ? '2.5rem'\n      : '0rem'}; /* TODO: make margin-top dynamic. 2.5rem is needed for post-template  */\n  grid-template-columns: 300px;\n  justify-content: center;\n  row-gap: 1rem;\n  @media (min-width: 576px) {\n    & {\n      grid-template-columns: repeat(auto-fit, 250px);\n      column-gap: 3rem;\n    }\n  }\n`\n","import React from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { Link } from 'gatsby'\nimport TagsList from '../TagsList'\nimport styled from 'styled-components'\n\nconst PostCard = ({ frontmatter, excerpt }) => {\n  const { title, slug, date, tags, image, readTime } = frontmatter\n\n  return (\n    <Wrapper>\n      <GatsbyImage image={getImage(image)} alt={title} className='img' />\n      <div className='info'>\n        <h3>{title}</h3>\n        <div className='underline' />\n        <p>{excerpt}</p>\n        {tags?.length > 0 && <TagsList tags={tags} isPost={false} />}\n        <Link to={`/posts/${slug}`} className='link'>\n          Continue Reading...\n        </Link>\n        <footer>\n          <span className='date'>📆 &nbsp; {date}</span>\n          <span>{readTime} min</span>\n        </footer>\n      </div>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.article`\n  /* border: 1px solid white; */\n  margin-bottom: 3rem;\n  .info {\n    text-align: center;\n  }\n  .img {\n    margin-bottom: 1rem;\n    border-radius: var(--radius);\n    height: 17rem;\n  }\n  .category {\n    display: inline-block;\n    margin-bottom: 1rem;\n    background: var(--clr-green-1);\n    padding: 0.25rem 0.5rem;\n    text-transform: uppercase;\n    font-weight: 700;\n    border-radius: var(--radius);\n    letter-spacing: var(--spacing);\n    color: black;\n  }\n  h3 {\n    font-weight: 700;\n    margin-bottom: 1rem;\n    text-transform: initial;\n    margin-top: 0;\n  }\n  .underline {\n    width: 5rem;\n    height: 1px;\n    background: var(--clr-grey-9);\n    margin: 0 auto;\n    margin-bottom: 1rem;\n  }\n  p {\n    color: var(--clr-white);\n    line-height: 1.8;\n  }\n  .link {\n    display: flex;\n    margin-top: 1rem;\n    text-transform: uppercase;\n    letter-spacing: var(--spacing);\n    font-weight: 700;\n    color: var(--continue-reading);\n    align-items: center;\n    svg {\n      margin-left: 0.25rem;\n      font-size: 1.2rem;\n    }\n  }\n  .link:hover {\n    border-color: var(--clr-primary-8);\n    color: var(--clr-link-hover);\n  }\n  footer {\n    margin-top: 2rem;\n    padding-top: 1rem;\n    border-top: 1px solid var(--clr-grey-9);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: var(--clr-grey-5);\n\n    & .date {\n      display: flex;\n      align-items: center;\n      & .icon {\n        color: var(--clr-grey-5);\n        margin-right: 0.5rem;\n      }\n    }\n  }\n  @media (min-width: 600px) {\n    .img {\n      height: 20rem;\n    }\n  }\n  @media (min-width: 800px) {\n    .img {\n      height: 25rem;\n    }\n  }\n  @media (min-width: 992px) {\n    & {\n      display: grid;\n      grid-template-columns: 30rem 1fr;\n      column-gap: 1.5rem;\n      .info {\n        text-align: left;\n      }\n      .img {\n        height: 100%;\n        max-height: 20rem;\n      }\n      .underline {\n        margin-left: 0;\n        margin-right: 0;\n      }\n    }\n  }\n`\n\nexport default PostCard\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst SlimPostCard = ({ frontmatter }) => {\n  const { title, slug, date } = frontmatter\n\n  return (\n    <Wrapper>\n      <Link to={`/posts/${slug}`} className='info'>\n        <div>\n          <h4>{title}</h4>\n          <footer>\n            <span className='date'>📆 &nbsp; {date}</span>\n          </footer>\n        </div>\n      </Link>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 0.5rem;\n\n  .info {\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n    text-align: left;\n    border-radius: var(--radius-2);\n    transition: var(--transition);\n    display: flex;\n    text-transform: uppercase;\n    border: 1px solid var(--clr-green-4);\n    svg {\n      margin-left: 0.25rem;\n      font-size: 1.2rem;\n    }\n  }\n  .info:hover {\n    background-color: var(--clr-green-5);\n    transform: scale(1.01);\n  }\n\n  h4 {\n    margin-top: 0.5rem;\n  }\n\n  footer {\n    margin-top: 0rem;\n    padding-top: 0rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: var(--clr-grey-5);\n\n    & .date {\n      display: flex;\n      align-items: center;\n      & .icon {\n        color: var(--clr-grey-5);\n        margin-right: 0.5rem;\n      }\n    }\n  }\n`\n\nexport default SlimPostCard\n","import React from 'react'\nimport PostCard from './PostCard'\nimport SlimPostCard from './SlimPostCard'\nimport ProjectCard from '../Projects/ProjectCard'\nimport styled from 'styled-components'\n\nconst PostCardList = ({ posts, isSlim }) => {\n  return (\n    <Wrapper>\n      {posts.map(post =>\n        post.frontmatter.category !== 'PROJECT' ? (\n          !isSlim ? (\n            <PostCard key={post.id} {...post} />\n          ) : (\n            <SlimPostCard key={post.id} {...post} />\n          )\n        ) : (\n          <ProjectCard key={post.id} {...post} />\n        )\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PostCardList\n\nconst Wrapper = styled.div`\n  > div:last-child {\n    margin-bottom: 2rem;\n  }\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FaMinusCircle, FaPlusCircle } from 'react-icons/fa'\n\nconst Accordion = ({ title, children }) => {\n  const [isActive, setIsActive] = useState(false)\n\n  return (\n    <Wrapper>\n      <div className='accordion-title' onClick={() => setIsActive(!isActive)}>\n        <div>{title}</div>\n        <div>{isActive ? <FaMinusCircle /> : <FaPlusCircle />}</div>\n      </div>\n      {isActive && <div className='accordion-content'>{children}</div>}\n    </Wrapper>\n  )\n}\n\nexport default Accordion\n\nconst Wrapper = styled.div`\n  .accordion-title {\n    display: flex;\n    justify-content: space-between;\n    font-size: 1.2rem;\n    font-weight: 900;\n    color: white;\n    flex-direction: row;\n    cursor: pointer;\n    background-color: var(--clr-green-3);\n  }\n\n  .accordion-title:hover {\n    background-color: var(--clr-green-2);\n    color: var(--clr-green-5);\n    transition: var(--transition);\n  }\n\n  .accordion-title,\n  .accordion-content {\n    padding: 1rem;\n  }\n\n  .accordion-content {\n    background-color: var(--clr-green-4);\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BsToggleOff, BsToggleOn } from 'react-icons/bs'\n\nconst ToggleViewButton = ({ context }) => {\n  return (\n    <Wrapper onClick={() => context.changeView()} className='toggle-view'>\n      <span>View as List</span>\n      {context.isSlim ? <BsToggleOn /> : <BsToggleOff />}\n    </Wrapper>\n  )\n}\n\nexport default ToggleViewButton\n\nconst Wrapper = styled.div`\n  background-color: var(--clr-green-5);\n  align-items: center;\n  border: 0.3px solid var(--clr-green-4);\n  border-radius: var(--radius-2);\n  padding: 5px;\n  margin-bottom: 0.5rem;\n  span {\n    color: white;\n    margin-left: 0.2rem;\n    margin-right: 1rem;\n    line-height: 2;\n  }\n\n  svg {\n    font-size: 1.5rem;\n  }\n`\n","import React from 'react'\nimport PostCardList from './PostCardList'\nimport Banner from '../Banner'\nimport Tags from '../Tags'\nimport Accordion from '../Accordion'\nimport ToggleViewButton from '../ToggleViewButton'\n\nconst Posts = ({ posts, title, count, context }) => {\n  // return list of posts\n  console.log(context)\n  return (\n    <section className='posts'>\n      <h3 className='posts-title'>\n        {title}\n        {count === undefined\n          ? ''\n          : count === 1\n          ? ': 1 post is found'\n          : `: ${count} posts are found`}\n      </h3>\n      <div className='posts-center'>\n        {/* posts column */}\n        <article>\n          <Accordion title={'Tags'}>\n            <Tags />\n          </Accordion>\n          <br />\n          <ToggleViewButton context={context} />\n          <PostCardList posts={posts} isSlim={context.isSlim} />\n        </article>\n        {/* banner column on the right side */}\n        <article>\n          <Banner post={true} />\n        </article>\n      </div>\n    </section>\n  )\n}\n\nexport default Posts\n","import React from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport TagsList from '../TagsList'\n\nconst Project = ({ frontmatter, excerpt }) => {\n  const { title, slug, date, tags, image, readTime } = frontmatter\n\n  return (\n    <Wrapper>\n      <GatsbyImage image={getImage(image)} alt={title} className='img' />\n      <div className='info'>\n        <h3>{title}</h3>\n        <div className='underline' />\n        <p>{excerpt}</p>\n        {tags?.length > 0 && <TagsList tags={tags} isPost={false} />}\n        <Link to={`/projects/${slug}`} className='link'>\n          Continue Reading...\n        </Link>\n        <footer>\n          <span className='date'>\n            <span className='date'>📆 &nbsp; {date}</span>\n          </span>\n          <span>{readTime} min</span>\n        </footer>\n      </div>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.article`\n  margin-bottom: 3rem;\n  .info {\n    text-align: center;\n  }\n  .img {\n    margin-bottom: 1rem;\n    border-radius: var(--radius);\n    height: 17rem;\n  }\n  .category {\n    display: inline-block;\n    margin-bottom: 1rem;\n    background: var(--clr-green-1);\n    padding: 0.25rem 0.5rem;\n    text-transform: uppercase;\n    font-weight: 700;\n    border-radius: var(--radius);\n    letter-spacing: var(--spacing);\n    color: black;\n  }\n  h3 {\n    font-weight: 700;\n    margin-bottom: 1rem;\n    text-transform: initial;\n    margin-top: 0;\n  }\n  .underline {\n    width: 5rem;\n    height: 1px;\n    background: var(--clr-grey-9);\n    margin: 0 auto;\n    margin-bottom: 1rem;\n  }\n  p {\n    color: var(--clr-white);\n    line-height: 1.8;\n  }\n  .link {\n    display: flex;\n    margin-top: 1rem;\n    text-transform: uppercase;\n    letter-spacing: var(--spacing);\n    font-weight: 700;\n    color: var(--continue-reading);\n    /* padding-bottom: 0.1rem; */\n    align-items: center;\n    svg {\n      margin-left: 0.25rem;\n      font-size: 1.2rem;\n    }\n  }\n  .link:hover {\n    border-color: var(--clr-primary-8);\n    color: var(--clr-link-hover);\n  }\n  footer {\n    margin-top: 2rem;\n    padding-top: 1rem;\n    border-top: 1px solid var(--clr-grey-9);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: var(--clr-grey-5);\n\n    & .date {\n      display: flex;\n      align-items: center;\n      & .icon {\n        color: var(--clr-grey-5);\n        margin-right: 0.5rem;\n      }\n    }\n  }\n  @media (min-width: 600px) {\n    .img {\n      height: 20rem;\n    }\n  }\n  @media (min-width: 800px) {\n    .img {\n      height: 25rem;\n    }\n  }\n  @media (min-width: 992px) {\n    & {\n      display: grid;\n      grid-template-columns: 30rem 1fr;\n      column-gap: 1.5rem;\n      .info {\n        text-align: left;\n      }\n      .img {\n        height: 100%;\n        max-height: 20rem;\n      }\n      .underline {\n        margin-left: 0;\n        margin-right: 0;\n      }\n    }\n  }\n`\n\nexport default Project\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst Tags = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allMdx(sort: { fields: frontmatter___tags, order: ASC }) {\n        group(field: frontmatter___tags) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n\n  const {\n    allMdx: { group: tags },\n  } = data\n\n  return (\n    <Wrapper>\n      <Link to={`/tags`} className='tag'>\n        All\n      </Link>\n      {tags.map((tag, index) => {\n        return (\n          <Link key={index} to={`/tags/${tag.fieldValue}`} className='tag'>\n            {tag.fieldValue} ({tag.totalCount})\n          </Link>\n        )\n      })}\n    </Wrapper>\n  )\n}\n\nexport default Tags\n\nconst Wrapper = styled.div`\n  .tag {\n    background: var(--clr-tags-bg);\n    color: var(--clr-code-font);\n    padding: 0.1rem 0.2rem;\n    border-radius: var(--radius);\n    font-size: 80%;\n    overflow-x: auto;\n    /* white-space: break-spaces; */\n    /* overflow-wrap: break-word; */\n    text-transform: none;\n    font-family: var(--fira-mono-font);\n    margin-right: 5px;\n    font-weight: bold;\n    transition: var(--transition);\n  }\n\n  a[aria-current='page'] {\n    background: var(--clr-tags-selected);\n    color: var(--clr-tags-selected-font);\n  }\n\n  .tag:hover {\n    background: var(--clr-green-1);\n    color: black;\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst TagsList = ({ tags, isPost }) => {\n  return (\n    <Wrapper isPost={isPost}>\n      {tags.map((tag, index) => {\n        return (\n          <Link key={index} to={`/tags/${tag}`} className='tag'>\n            {tag}\n          </Link>\n        )\n      })}\n    </Wrapper>\n  )\n}\n\nexport default TagsList\n\nconst Wrapper = styled.div`\n  /* overflow-wrap: break-word; */\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  .tag {\n    background: var(--clr-tags-bg);\n    color: var(--clr-code-font);\n    padding: 0.1rem 0.2rem;\n    border-radius: var(--radius);\n    font-size: 90%;\n    /* overflow-x: auto; */\n    /* white-space: break-spaces; */\n    /* overflow-wrap: break-word; */\n    text-transform: none;\n    font-family: var(--fira-mono-font);\n    margin-top: 2px;\n    margin-right: 5px;\n    margin-bottom: 5px;\n    font-weight: bold;\n    transition: var(--transition);\n  }\n\n  a[aria-current='page'] {\n    background: var(--clr-tags-selected);\n    color: var(--clr-tags-selected-font);\n  }\n\n  .tag:hover {\n    background: var(--clr-green-1);\n    color: black;\n  }\n\n  @media (min-width: 992px) {\n    justify-content: ${props => (props.isPost ? 'center' : 'left')};\n  }\n`\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Seo from '../components/Seo'\nimport Posts from '../components/Posts'\nimport Banner from '../components/Banner'\nimport { myContext } from '../../provider'\n\nconst TagsPage = ({ data }) => {\n  const {\n    allMdx: { allPosts: posts, totalCount: count },\n  } = data\n\n  return (\n    <myContext.Consumer>\n      {context => (\n        <Layout>\n          <Seo title='All posts' />\n          <section className='posts'>\n            <article>\n              <Posts\n                posts={posts}\n                title='All posts'\n                count={count}\n                context={context}\n              />\n            </article>\n            {/* banner column on the right side */}\n            <article>\n              <Banner post={true} />\n            </article>\n          </section>\n        </Layout>\n      )}\n    </myContext.Consumer>\n  )\n}\n\nexport default TagsPage\n\nexport const query = graphql`\n  {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n      allPosts: nodes {\n        id\n        frontmatter {\n          title\n          slug\n          date(formatString: \"MMMM Do, YYYY\")\n          author\n          category\n          tags\n          readTime\n          image {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        excerpt\n      }\n      totalCount\n    }\n  }\n`\n"],"sourceRoot":""}