{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/how-to-remove-oldandmerged-git-branches-easily","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How To Remove Old and Merged Git Branches Easily\",\n  \"slug\": \"how-to-remove-oldandmerged-git-branches-easily\",\n  \"image\": \"./images/main_git_branch.png\",\n  \"date\": \"2022-03-18T00:00:00.000Z\",\n  \"author\": \"youngjae lim\",\n  \"published\": true,\n  \"category\": \"Git\",\n  \"tags\": [\"git\", \"devops\", \"tool\"],\n  \"readTime\": 5\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Overview\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Let's say that you do your all of your development on a feature branch in your local repository and push it to the remote repository creating a pull request. Then in your remote repository(say, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GitHub\"), \"), you merge the feature branch into main branch after review, then get rid of the feature branch.\"), mdx(\"p\", null, \"However, you still have the feature branch in your local repository. If you keep doing this, you will have growing number of feature branches that are no longer needed locally. You need to clean them up and the below is how you do it.\"), mdx(\"h2\", {\n    \"id\": \"case-i\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Case I\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#case-i\",\n    \"aria-label\": \"case i permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Fetch the latest from the git\\ngit fetch\\n\\n# Check the list of local git branches\\ngit branch\\n\\n# Delete all local branches that have been merged to main branch and then deleted in the remote repository\\ngit branch --verbose | grep ': gone]' | grep -v '\\\\*' | awk '{ print $1; }' | xargs -r git branch -d\\n\\n# Check the list of local git branches that remain\\ngit branch\\n\")), mdx(\"h2\", {\n    \"id\": \"case-ii\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Case II\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#case-ii\",\n    \"aria-label\": \"case ii permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"In case where you merged the feature branch into main branch, but haven't deleted it yet in the remote repository, you can use the following commands to remove the merged branches locally:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Fetch the latest from the git\\ngit fetch\\n\\n# Check the list of local git branches\\ngit branch\\n\\n# Delete all local branches that have been merged to main branch, but haven't yet deleted in the remote repository\\ngit branch --merged main | grep -v '^\\\\* main' | xargs -n 1 -r git branch -d\\n\\n# Check the list of local git branches that remain\\ngit branch\\n\")), mdx(Link, {\n    to: \"/posts\",\n    className: \"btn center-btn\",\n    mdxType: \"Link\"\n  }, \"all posts\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#case-i","title":"Case I"},{"url":"#case-ii","title":"Case II"}]},"frontmatter":{"title":"How To Remove Old and Merged Git Branches Easily","author":"youngjae lim","category":"Git","tags":["git","devops","tool"],"slug":"how-to-remove-oldandmerged-git-branches-easily","date":"March 18th, 2022","readTime":5,"image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/5a7f3df5565f002a70e19cb57dd08232/fde09/main_git_branch.png","srcSet":"/static/5a7f3df5565f002a70e19cb57dd08232/9268f/main_git_branch.png 306w,\n/static/5a7f3df5565f002a70e19cb57dd08232/66c9f/main_git_branch.png 612w,\n/static/5a7f3df5565f002a70e19cb57dd08232/fde09/main_git_branch.png 1224w","sizes":"(min-width: 1224px) 1224px, 100vw"},"sources":[{"srcSet":"/static/5a7f3df5565f002a70e19cb57dd08232/cdaa0/main_git_branch.webp 306w,\n/static/5a7f3df5565f002a70e19cb57dd08232/1953f/main_git_branch.webp 612w,\n/static/5a7f3df5565f002a70e19cb57dd08232/88ac4/main_git_branch.webp 1224w","type":"image/webp","sizes":"(min-width: 1224px) 1224px, 100vw"}]},"width":1224,"height":700},"resize":{"src":"/static/5a7f3df5565f002a70e19cb57dd08232/f3583/main_git_branch.png","width":1200,"height":686}}},"embeddedImages":null,"videoSourceURL":null,"videoTitle":null},"excerpt":"Overview Let's say that you do your all of your development on a feature branch in your local repository and push it to the remote repository creating a pull…"}},"pageContext":{"slug":"how-to-remove-oldandmerged-git-branches-easily","previousPost":{"id":"a57c538e-d459-5492-ba39-b9b438879de1","frontmatter":{"title":"How To Deploy Gatsby Website to GitHub Pages Using GitHub Actions","slug":"how-to-deploy-gatsby-to-github-pages","tags":["gatsby","react","devops","git","github","ci/cd","github actions"]},"excerpt":"Overview This article will help you to publish your gatsby site to github pages using github actions. Gatsby Gatsby is a react based GraphQL…"},"nextPost":{"id":"2e854dec-20f2-54e8-b998-e9631c7576ef","frontmatter":{"title":"SvelteKit With Headless WordPress as CMS","slug":"sveltekit-with-headless-wordpress-cms","tags":["sveltekit","cms","wordpress","graphql"]},"excerpt":"Overview This article will show you how to get started with development of SvelteKit front-end web application using headless WordPress as a…"},"relatedPosts":[{"id":"a57c538e-d459-5492-ba39-b9b438879de1","frontmatter":{"title":"How To Deploy Gatsby Website to GitHub Pages Using GitHub Actions","slug":"how-to-deploy-gatsby-to-github-pages","tags":["gatsby","react","devops","git","github","ci/cd","github actions"]},"excerpt":"Overview This article will help you to publish your gatsby site to github pages using github actions. Gatsby Gatsby is a react based GraphQL…"}]}},"staticQueryHashes":["1552795008","2356771501","3156252089"]}