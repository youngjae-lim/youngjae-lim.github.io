{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/cookie-session-auth-in-sveltekit","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Cookie Session Authentication\",\n  \"slug\": \"cookie-session-auth-in-sveltekit\",\n  \"image\": \"./images/main_sveltekit_auth.png\",\n  \"date\": \"2022-04-04T00:00:00.000Z\",\n  \"author\": \"youngjae lim\",\n  \"published\": true,\n  \"category\": \"SvelteKit\",\n  \"tags\": [\"sveltekit\", \"front-end\", \"auth\"],\n  \"readTime\": 10,\n  \"embeddedImages\": [\"./images/sveltekit_start.png\", \"./images/sveltekit_getSession.png\", \"./images/sveltekit_custom_headers.png\", \"./images/sveltekit_session_object.png\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Overview\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"In this article, we will take a look at how hooks, particularly \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handle\"), \" & \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getSession\"), \" work in SvelteKit. Then I will show a usecase of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hooks\"), \" in a simple app. A user will be able to login and we will authenticate the user and set a cookie. Then whenever the user visits a page, we will check if the cookie is in the request to determine whether or not he/she is authorized to visit the page.\"), mdx(\"h2\", {\n    \"id\": \"what-is-hooks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"What is Hooks?\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#what-is-hooks\",\n    \"aria-label\": \"what is hooks permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"In programming, a hook is a place and usually an interface provided in packaged code that allows a programmer to insert customized programming. If you are familiar with a middlware in a server-side programming of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node.js\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"express.js\"), \", that is considered as a hook because it does a certain things inside the middleware by accessing to a request object and a response object.\"), mdx(\"p\", null, \"In SvelteKit, there are currently four functions provided as part of hooks at the time of this writing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"handle\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"handleError\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"getSession\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"externalFetch\"))), mdx(\"p\", null, \"To be able to do cookie-session authentication, we need only two of them: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handle\"), \" & \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getSession\"), \".\"), mdx(\"p\", null, \"Let's dive into each of them and check out how they work.\"), mdx(\"h2\", {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Getting started\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Make a SvelteKit project directory first.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm init svelte@next cookie-session-auth\\ncd cookie-session-auth\\nvim . # Or code . if you use a VS Code editor\\nnpm install\\nnpm run dev\\n\")), mdx(\"p\", null, \"Open up a browser and access \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://locahost:3000\"), \".\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[0]),\n    alt: \"sveltekit\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h3\", {\n    \"id\": \"getsession\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"getSession\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#getsession\",\n    \"aria-label\": \"getsession permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"In this section, we will take a look at how to create a session data on a server using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getSession\"), \" and access it from a client side using two methods.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getSession()\"), \" runs whenever SvelteKit server-renders a page. It takes an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"event\"), \" objects and returns a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"session\"), \" object that is available on the client side. Note that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"session\"), \" object must be serializable, which means that it must not contain things like functions or classes.\"), mdx(\"p\", null, \"To use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getSession\"), \", we must create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hooks.js\"), \" file in our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./src\"), \" directory:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/hooks.js\",\n    \"file\": \"./src/hooks.js\"\n  }, \"export const getSession = event => {\\n  console.log(event)\\n\\n  return {\\n    user: {\\n      id: '1h4jk90ds',\\n      name: 'John Doe',\\n      role: 'admin',\\n    },\\n  }\\n}\\n\")), mdx(\"p\", null, \"Go back to your terminal and check out the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"event\"), \" object printed out:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"file=console.log(event) highlights=3\",\n    \"file\": \"console.log(event)\",\n    \"highlights\": \"3\"\n  }, \"{\\n  clientAddress: [Getter],\\n  locals: {},\\n  params: {},\\n  platform: undefined,\\n  request: Request {\\n    size: 0,\\n    follow: 20,\\n    compress: true,\\n    counter: 0,\\n    agent: undefined,\\n    highWaterMark: 16384,\\n    insecureHTTPParser: false,\\n    [Symbol(Body internals)]: {\\n      body: null,\\n      stream: null,\\n      boundary: null,\\n      disturbed: false,\\n      error: null\\n    },\\n    [Symbol(Request internals)]: {\\n      method: 'GET',\\n      redirect: 'follow',\\n      headers: [Object],\\n      parsedURL: [URL],\\n      signal: null,\\n      referrer: undefined,\\n      referrerPolicy: ''\\n    }\\n  },\\n  routeId: '',\\n  url: URL {\\n    href: 'http://localhost:3000/',\\n    origin: 'http://localhost:3000',\\n    protocol: 'http:',\\n    username: '',\\n    password: '',\\n    host: 'localhost:3000',\\n    hostname: 'localhost',\\n    port: '3000',\\n    pathname: '/',\\n    search: '',\\n    searchParams: URLSearchParams {},\\n    hash: ''\\n  }\\n}\\n\")), mdx(\"p\", null, \"As you see, we have lots of information available in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"event\"), \" object. Please pay attention to the highlighted line \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"locals:{},\"), \". We will populate this \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"locals\"), \" object through \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handle\"), \" function.\"), mdx(\"p\", null, \"Because the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getSession\"), \" returns a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"session\"), \" object to a client, there are two ways to access it in a client side:\"), mdx(\"h4\", {\n    \"id\": \"1-using-appstores\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"1. Using \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"$app/stores\"), mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#1-using-appstores\",\n    \"aria-label\": \"1 using appstores permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/routes/index.svelte\",\n    \"file\": \"./src/routes/index.svelte\"\n  }, \"<script>\\n  import { session } from \\\"$app/stores\\\";\\n</script>\\n\\n<h1>Session Object</h1>\\n{JSON.stringify($session)}\\n\")), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[1]),\n    alt: \"sveltekit\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h4\", {\n    \"id\": \"2-using-load-function\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"2. Using \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"load\"), \" function\", mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#2-using-load-function\",\n    \"aria-label\": \"2 using load function permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"You can also use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"load\"), \" to access the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"session\"), \" object as well by modifying the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.svelte\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/routes/index.svelte\",\n    \"file\": \"./src/routes/index.svelte\"\n  }, \"<script context=\\\"module\\\">\\n  export const load = ({ session }) => {\\n    return {\\n      props: {\\n        session,\\n      },\\n    };\\n  };\\n</script>\\n\\n<script>\\n  export let session;\\n</script>\\n\\n<h1>Session Object</h1>\\n{JSON.stringify(session)}\\n\")), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[1]),\n    alt: \"sveltekit\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h3\", {\n    \"id\": \"handle\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"handle\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#handle\",\n    \"aria-label\": \"handle permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handle()\"), \" runs on the server every time SvelteKit receives a request. It receives two objects as the function arguments:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"an \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"event\"), \" object that carries the request and\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"resolve\"), \" function that invokes SvelteKit's router and generates a response\")), mdx(\"p\", null, \"Through the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handle\"), \", we can modify both the request and a response.\"), mdx(\"p\", null, \"Update the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hooks.js\"), \" file in the project root directory with the following changes:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/hooks.js add=1-11\",\n    \"file\": \"./src/hooks.js\",\n    \"add\": \"1-11\"\n  }, \"export const handle = async ({ event, resolve }) => {\\n  console.log(event)\\n\\n  event.locals.userName = 'Mary Doe'\\n\\n  const response = await resolve(event)\\n\\n  response.headers.set('x-custom-header', 'custom-header')\\n\\n  return response\\n}\\n\\nexport const getSession = event => {\\n  console.log(event)\\n\\n  return {\\n    user: {\\n      id: '1h4jk90ds',\\n      name: 'John Doe',\\n      role: 'admin',\\n    },\\n  }\\n}\\n\")), mdx(\"h4\", {\n    \"id\": \"what-this-code-does\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"What this code does\", mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#what-this-code-does\",\n    \"aria-label\": \"what this code does permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"We've added another function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handle\"), \" that receives \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"event\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"resolve\"), \". The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"console.log(event)\"), \"(line 2) will spit out the same object in the terminal as we've seen from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getSession\"), \" example with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"locals: {},\"), \" in it. However, we populate \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"locals\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"userName: 'Mary Doe'\"), \" right before resolving the request in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handle\"), \" function so that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getSession\"), \" will receive \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"event\"), \" object with the populated \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"locals\"), \" in it.\"), mdx(\"p\", null, \"Then we immediately resolve the event to receive a response(line 6). We attach a custom header to the original response(line 8) that is going to sent to the client. If you open up your browser's developer tool and inspect the repsonse headers after accessing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3000\"), \", there will be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x-custom-header: custom-header\"), \":\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[2]),\n    alt: \"sveltekit\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getSession\"), \" function is exactly the same as before. But check your terminal again, you will see that this time the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"console.log(event)\"), \"(line 12) printed out \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"locals: { userName: 'Mary Doe' },\"), \" in the terminal because the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handle\"), \" had intercepted the request and added the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"userName\"), \".\"), mdx(\"h3\", {\n    \"id\": \"example-cookie-session-authentication\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Example: Cookie Session Authentication\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#example-cookie-session-authentication\",\n    \"aria-label\": \"example cookie session authentication permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Now that we know how getSession, handle work in SvelteKit, we can take a step further to do a cookie session authentication in a simple app. The app itself won't be a complete form, but it would suffice to show how things are put together to make authentication work in SvelteKit.\"), mdx(\"p\", null, \"Let's work on making authentication endpoints first.\"), mdx(\"h4\", {\n    \"id\": \"install-dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Install Dependencies\", mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#install-dependencies\",\n    \"aria-label\": \"install dependencies permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm insall cookie uuid\\n\")), mdx(\"h4\", {\n    \"id\": \"login-page\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Login Page\", mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#login-page\",\n    \"aria-label\": \"login page permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Let's get started with creating a new page \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"login.svelte\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./src/routes\"), \" directory:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/routes/login.svelte\",\n    \"file\": \"./src/routes/login.svelte\"\n  }, \"<script>\\n  let msg = \\\"\\\";\\n\\n  const login = async () => {\\n    const res = await fetch(\\\"/api/login\\\", {\\n      method: \\\"POST\\\",\\n      body: JSON.stringify({\\n        email: \\\"johndoe@example.com\\\",\\n        password: \\\"secret\\\",\\n      }),\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\n      },\\n    });\\n\\n    const data = await res.json();\\n\\n    if (!res.ok) {\\n      msg = data.msg;\\n      return;\\n    }\\n\\n    msg = data.msg;\\n  };\\n</script>\\n\\n<h1>Login</h1>\\n<button on:click={login}>Login</button>\\n<p>{msg}</p>\\n\")), mdx(\"h4\", {\n    \"id\": \"login-endpoint\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Login Endpoint\", mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#login-endpoint\",\n    \"aria-label\": \"login endpoint permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/routes/api/login.js\",\n    \"file\": \"./src/routes/api/login.js\"\n  }, \"import { serialize } from 'cookie'\\nimport { v4 as uuidv4 } from 'uuid'\\n\\nexport const post = async ({ request }) => {\\n  const user = await request.json()\\n  console.log(user)\\n\\n  // In a real life situation, the password must to be hashed/salted and compared to database\\n  if (!(user.email === 'johndoe@example.com' && user.password === 'secret')) {\\n    return {\\n      status: 401,\\n      body: {\\n        msg: 'Invalid email or password',\\n      },\\n    }\\n  }\\n\\n  const sessionId = uuidv4()\\n  console.log(sessionId)\\n\\n  const headers = {\\n    'Set-Cookie': serialize('session_id', sessionId, {\\n      httpOnly: true,\\n      sameSite: 'lax',\\n      maxAge: 60 * 60 * 24 * 7, // 7 days\\n      secure: process.env.NODE_ENV === 'production',\\n      path: '/',\\n    }),\\n  }\\n  console.log(headers)\\n\\n  return {\\n    status: 200,\\n    headers,\\n    body: {\\n      msg: 'Login successful!',\\n    },\\n  }\\n}\\n\")), mdx(\"p\", null, \"Let's break down what this code does:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/api/login.js\"), \" endpoint will receive a request from a client and check if a user email and a password are valid.\\nThe console-logged \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"user\"), \" is:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"{ email: 'johndoe@example.com', password: 'secret' }\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If not, it sends a status 401 with a message, 'Invalid email or password'.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If valid, then it creates a session id with the help of uuid package and\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"session_Id\"), \" will be something like this:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"2414a81b-2308-4f0c-9409-572193a95135\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Then it also generates a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Set-Cookie\"), \" headers with the session id using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cookie\"), \" package.\\nThen \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"headers\"), \" is:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"{\\n  'Set-Cookie': 'session_id=2414a81b-2308-4f0c-9409-572193a95135; Max-Age=604800; Path=/; HttpOnly; SameSite=Lax'\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Once the header is created, we finally return an object with a status code 200, the headers, and a body message 'Login successfule!'.\"))), mdx(\"h4\", {\n    \"id\": \"hooks-handle-getsession\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Hooks: handle, getSession\", mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#hooks-handle-getsession\",\n    \"aria-label\": \"hooks handle getsession permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/hooks.js\",\n    \"file\": \"./src/hooks.js\"\n  }, \"import { parse } from 'cookie'\\n\\nexport const handle = async ({ event, resolve }) => {\\n  // Print out cookie in the terminal\\n  // It will be something like: session_id=49914bf9-64e6-424a-bb2e-df7348882256\\n  console.log(event.request.headers.get('cookie'))\\n\\n  // Parse cookie\\n  const cookies = parse(event.request.headers.get('cookie') || '')\\n  console.log('cookies: ', cookies)\\n\\n  // Attach a user object with the cookies to the event.locals\\n  event.locals.user = cookies\\n\\n  // Determine whether or not a user is authenticated by checking out the sesssion_id\\n  if (!cookies.session_id) {\\n    event.locals.user.authenticated = false\\n  } else {\\n    event.locals.user.authenticated = true\\n  }\\n\\n  // Resolve the request\\n  const response = await resolve(event)\\n\\n  return response\\n}\\n\\nexport const getSession = event => {\\n  console.log(event.locals.user)\\n  const user = event.locals.user\\n\\n  if (!user.session_id) {\\n    return {}\\n  }\\n\\n  return {\\n    user,\\n  }\\n}\\n\")), mdx(\"h5\", {\n    \"id\": \"handle-1\"\n  }, \"handle\"), mdx(\"p\", null, \"Let's break down what this code does:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"handle\"), \" will take an event object as an argument and get a cookie object from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"event.request.headers\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then it parses the cookie using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"parse()\"), \" from cookie package\\nThe parsed cookie will be like this:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"{ session_id: '49914bf9-64e6-424a-bb2e-df7348882256' }\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then we set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"event.locals.user\"), \" to the parse cookie.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If the cookie has a session id, we attche \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"authenticated\"), \" key with a value\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", otherwise 'false' to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"event.locals.user\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then we resolve the request and return a response.\")), mdx(\"h5\", {\n    \"id\": \"getsession-1\"\n  }, \"getSession\"), mdx(\"p\", null, \"Because the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handle\"), \" has intercepted the request and already determinied whether or not a user is authenticated, we can set a session object using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getSession\"), \" so that it can be available in the client.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"getSession\"), \" takes an event object that has passed through \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"handle\"), \". When you console log \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"evnet.locals.user\"), \", you will be able to see:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"{\\n  session_id: '49914bf9-64e6-424a-bb2e-df7348882256',\\n  authenticated: true\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If the user does not have a session id, then we return nothiing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Otherwise, we return the user object.\")), mdx(\"h3\", {\n    \"id\": \"main-page\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Main Page\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#main-page\",\n    \"aria-label\": \"main page permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Now let's see how we can get an session object using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"load\"), \" in our main page.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/routes/index.svelte\",\n    \"file\": \"./src/routes/index.svelte\"\n  }, \"<script context=\\\"module\\\">\\n  export const load = ({ session }) => {\\n    return {\\n      props: {\\n        session,\\n      },\\n    };\\n  };\\n</script>\\n\\n<script>\\n  export let session;\\n</script>\\n\\n<h1>Session Object</h1>\\n{JSON.stringify(session)}\\n\")), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[3]),\n    alt: \"sveltekit\",\n    mdxType: \"GatsbyImage\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#what-is-hooks","title":"What is Hooks?"},{"url":"#getting-started","title":"Getting started","items":[{"url":"#getsession","title":"getSession","items":[{"url":"#1-using-appstores","title":"1. Using $app/stores"},{"url":"#2-using-load-function","title":"2. Using load function"}]},{"url":"#handle","title":"handle","items":[{"url":"#what-this-code-does","title":"What this code does"}]},{"url":"#example-cookie-session-authentication","title":"Example: Cookie Session Authentication","items":[{"url":"#install-dependencies","title":"Install Dependencies"},{"url":"#login-page","title":"Login Page"},{"url":"#login-endpoint","title":"Login Endpoint"},{"url":"#hooks-handle-getsession","title":"Hooks: handle, getSession","items":[{"url":"#handle-1","title":"handle"},{"url":"#getsession-1","title":"getSession"}]}]},{"url":"#main-page","title":"Main Page"}]}]},"frontmatter":{"title":"Cookie Session Authentication","author":"youngjae lim","category":"SvelteKit","tags":["sveltekit","front-end","auth"],"slug":"cookie-session-auth-in-sveltekit","date":"April 4th, 2022","readTime":10,"image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/fbd9bd7f7699974457c19c33eb09390e/78e00/main_sveltekit_auth.png","srcSet":"/static/fbd9bd7f7699974457c19c33eb09390e/11495/main_sveltekit_auth.png 285w,\n/static/fbd9bd7f7699974457c19c33eb09390e/bc884/main_sveltekit_auth.png 570w,\n/static/fbd9bd7f7699974457c19c33eb09390e/78e00/main_sveltekit_auth.png 1140w","sizes":"(min-width: 1140px) 1140px, 100vw"},"sources":[{"srcSet":"/static/fbd9bd7f7699974457c19c33eb09390e/aacd7/main_sveltekit_auth.webp 285w,\n/static/fbd9bd7f7699974457c19c33eb09390e/e048a/main_sveltekit_auth.webp 570w,\n/static/fbd9bd7f7699974457c19c33eb09390e/406c3/main_sveltekit_auth.webp 1140w","type":"image/webp","sizes":"(min-width: 1140px) 1140px, 100vw"}]},"width":1140,"height":684},"resize":{"src":"/static/fbd9bd7f7699974457c19c33eb09390e/f3583/main_sveltekit_auth.png","width":1200,"height":720}}},"embeddedImages":[{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/4e369caacd7d5df2734267f246e04a90/40c19/sveltekit_start.png","srcSet":"/static/4e369caacd7d5df2734267f246e04a90/921fe/sveltekit_start.png 109w,\n/static/4e369caacd7d5df2734267f246e04a90/d5f2d/sveltekit_start.png 218w,\n/static/4e369caacd7d5df2734267f246e04a90/40c19/sveltekit_start.png 436w","sizes":"(min-width: 436px) 436px, 100vw"},"sources":[{"srcSet":"/static/4e369caacd7d5df2734267f246e04a90/8e146/sveltekit_start.webp 109w,\n/static/4e369caacd7d5df2734267f246e04a90/e6353/sveltekit_start.webp 218w,\n/static/4e369caacd7d5df2734267f246e04a90/af461/sveltekit_start.webp 436w","type":"image/webp","sizes":"(min-width: 436px) 436px, 100vw"}]},"width":436,"height":143}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/645812f50d05cb35acb34eecb0de9be8/0e402/sveltekit_getSession.png","srcSet":"/static/645812f50d05cb35acb34eecb0de9be8/5292f/sveltekit_getSession.png 108w,\n/static/645812f50d05cb35acb34eecb0de9be8/eba0b/sveltekit_getSession.png 217w,\n/static/645812f50d05cb35acb34eecb0de9be8/0e402/sveltekit_getSession.png 433w","sizes":"(min-width: 433px) 433px, 100vw"},"sources":[{"srcSet":"/static/645812f50d05cb35acb34eecb0de9be8/d79a9/sveltekit_getSession.webp 108w,\n/static/645812f50d05cb35acb34eecb0de9be8/9a9b8/sveltekit_getSession.webp 217w,\n/static/645812f50d05cb35acb34eecb0de9be8/c5868/sveltekit_getSession.webp 433w","type":"image/webp","sizes":"(min-width: 433px) 433px, 100vw"}]},"width":433,"height":143}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a5b8ffd43d0ab166f09895b1628540bd/fcd14/sveltekit_custom_headers.png","srcSet":"/static/a5b8ffd43d0ab166f09895b1628540bd/bf470/sveltekit_custom_headers.png 253w,\n/static/a5b8ffd43d0ab166f09895b1628540bd/6f7d7/sveltekit_custom_headers.png 507w,\n/static/a5b8ffd43d0ab166f09895b1628540bd/fcd14/sveltekit_custom_headers.png 1013w","sizes":"(min-width: 1013px) 1013px, 100vw"},"sources":[{"srcSet":"/static/a5b8ffd43d0ab166f09895b1628540bd/45333/sveltekit_custom_headers.webp 253w,\n/static/a5b8ffd43d0ab166f09895b1628540bd/c881e/sveltekit_custom_headers.webp 507w,\n/static/a5b8ffd43d0ab166f09895b1628540bd/0dd81/sveltekit_custom_headers.webp 1013w","type":"image/webp","sizes":"(min-width: 1013px) 1013px, 100vw"}]},"width":1013,"height":599}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ca30f77e3f4081ed948fadfa131e5bd4/1cbb6/sveltekit_session_object.png","srcSet":"/static/ca30f77e3f4081ed948fadfa131e5bd4/b0fc8/sveltekit_session_object.png 182w,\n/static/ca30f77e3f4081ed948fadfa131e5bd4/113c8/sveltekit_session_object.png 363w,\n/static/ca30f77e3f4081ed948fadfa131e5bd4/1cbb6/sveltekit_session_object.png 726w","sizes":"(min-width: 726px) 726px, 100vw"},"sources":[{"srcSet":"/static/ca30f77e3f4081ed948fadfa131e5bd4/7a9f1/sveltekit_session_object.webp 182w,\n/static/ca30f77e3f4081ed948fadfa131e5bd4/8cc84/sveltekit_session_object.webp 363w,\n/static/ca30f77e3f4081ed948fadfa131e5bd4/2595a/sveltekit_session_object.webp 726w","type":"image/webp","sizes":"(min-width: 726px) 726px, 100vw"}]},"width":726,"height":176}}}],"videoSourceURL":null,"videoTitle":null},"excerpt":"Overview In this article, we will take a look at how hooks, particularly  handle  &  getSession  work in SvelteKit. Then I will show a usecase of  hooks  in a…"}},"pageContext":{"slug":"cookie-session-auth-in-sveltekit","previousPost":{"id":"78c83d18-1254-5885-9d6c-566035ec463c","frontmatter":{"title":"How To Pass Data From Layout Page To descendant pages and components In SvelteKit","slug":"how-to-pass-data-from-pages-to-descendant-pages-in-sveltekit","tags":["sveltekit","front-end"]},"excerpt":"Overview In the previous article, we went over how to create a standalone endpoint and fetch data from it in a layout and its descendant…"},"nextPost":null,"relatedPosts":[{"id":"4d706cd6-1d64-5123-b893-3d5f03ada1f5","frontmatter":{"title":"How To Set Up Tailwind CSS with the SvelteKit","slug":"how-to-setup-tailwind-sveltekit","tags":["sveltekit","tailwindcss","css"]},"excerpt":"Overview This article will show you how to setup  Tailwind CSS  in a  SvelteKit  project. Steps Set up the project and install  taliwindcss…"},{"id":"2e854dec-20f2-54e8-b998-e9631c7576ef","frontmatter":{"title":"SvelteKit With Headless WordPress as CMS","slug":"sveltekit-with-headless-wordpress-cms","tags":["sveltekit","cms","wordpress","graphql"]},"excerpt":"Overview This article will show you how to get started with development of SvelteKit front-end web application using headless WordPress as a…"},{"id":"14076e29-608e-586b-83a9-2507f8b7b0d4","frontmatter":{"title":"Data From Endpoint To Layout and Pages In SvelteKit","slug":"data-from-endpoint-to-layouts-to-pages-in-sveltekit","tags":["sveltekit","front-end"]},"excerpt":"Overview In this article, we will create a standalone endpoint in SvelteKit and fetch data from the endpoint and load the fetched data into…"},{"id":"78c83d18-1254-5885-9d6c-566035ec463c","frontmatter":{"title":"How To Pass Data From Layout Page To descendant pages and components In SvelteKit","slug":"how-to-pass-data-from-pages-to-descendant-pages-in-sveltekit","tags":["sveltekit","front-end"]},"excerpt":"Overview In the previous article, we went over how to create a standalone endpoint and fetch data from it in a layout and its descendant…"}]}},"staticQueryHashes":["1552795008","240803378","3156252089"]}