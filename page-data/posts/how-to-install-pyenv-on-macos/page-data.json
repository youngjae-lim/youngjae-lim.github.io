{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/how-to-install-pyenv-on-macos","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How To Install Pyenv on MacOS\",\n  \"slug\": \"how-to-install-pyenv-on-macos\",\n  \"image\": \"./images/main_pyenv.png\",\n  \"date\": \"2022-03-07T00:00:00.000Z\",\n  \"author\": \"youngjae lim\",\n  \"category\": \"Python\",\n  \"tags\": [\"python\", \"tool\", \"macos\"],\n  \"readTime\": 5\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Overview\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Pyenv lets you easily switch between multiple versions of Python. It's simple, unobtrusive, and follows the UNIX tradition of single-purpose tools that do one thing well.\"), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Steps\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Update brew\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"brew update\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install zlib sqlite xz installed on your machine\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"brew install zlib sqlite xz\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Brew install Pyenv\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"brew install pyenv\\n\")))), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Restart the terminal for changes to take effect or run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"exec \\\"$SHELL\\\"\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"exec \\\"$SHELL\\\"\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Add exports to the current terminal window\"), mdx(\"blockquote\", {\n    display: \"info\"\n  }, \"The zlib compression algorithm and the SQLite database are dependencies for pyenv and often cause build problems when not configured correctly. Add these exports to your current terminal window to ensure the installation completes:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"export LDFLAGS=\\\"-L/usr/local/opt/zlib/lib -L/usr/local/opt/sqlite/lib\\\"\\nexport CPPFLAGS=\\\"-I/usr/local/opt/zlib/include -I/usr/local/opt/sqlite/include\\\"\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Check out some available versions of python > 3.9.*\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"pyenv install --list | grep 3.9.\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install python 3.9.4\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"It will take some time to finish the installation.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"pyenv install 3.9.4\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Make 3.9.4 as global python version\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"pyenv global 3.9.4\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Check the version\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"pyenv version\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You should see \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"3.9.4 (set by /Users/youngjaelim/.pyenv/version)\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Configure \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".zshrc\")), mdx(\"blockquote\", {\n    display: \"info\"\n  }, \"The power of pyenv comes from its control over our shell's path. In order for it to work correctly, we need to add the following to our configuration file (.zshrc for me, possibly .bash_profile for you)\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\\\\n eval \\\"$(pyenv init --path)\\\"  eval \\\"$(pyenv init -)\\\"\\\\nfi' >> ~/.zshrc\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Check to make sure .zshrc updated\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"cat ~/.zshrc\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Restart the terminal for changes to take effect or run exec \\\"$SHELL\\\".\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"exec \\\"$SHELL\\\"\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Check python version\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"python -V\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upgrade the pip and setuptools packages\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"To avoid the persistent warning about upgrading the pip package, it would be best if you upgrade the pip package.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"pip install -U pip setuptools\\npip list\\n\")))), mdx(Link, {\n    to: \"/posts\",\n    className: \"btn center-btn\",\n    mdxType: \"Link\"\n  }, \"all posts\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#steps","title":"Steps"}]},"frontmatter":{"title":"How To Install Pyenv on MacOS","author":"youngjae lim","category":"Python","tags":["python","tool","macos"],"slug":"how-to-install-pyenv-on-macos","date":"March 7th, 2022","readTime":5,"image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/906218b1e9e0ad23d6cd43b04e31ab16/3403d/main_pyenv.png","srcSet":"/static/906218b1e9e0ad23d6cd43b04e31ab16/557ec/main_pyenv.png 324w,\n/static/906218b1e9e0ad23d6cd43b04e31ab16/d53c0/main_pyenv.png 648w,\n/static/906218b1e9e0ad23d6cd43b04e31ab16/3403d/main_pyenv.png 1296w","sizes":"(min-width: 1296px) 1296px, 100vw"},"sources":[{"srcSet":"/static/906218b1e9e0ad23d6cd43b04e31ab16/a275d/main_pyenv.webp 324w,\n/static/906218b1e9e0ad23d6cd43b04e31ab16/8829d/main_pyenv.webp 648w,\n/static/906218b1e9e0ad23d6cd43b04e31ab16/b7403/main_pyenv.webp 1296w","type":"image/webp","sizes":"(min-width: 1296px) 1296px, 100vw"}]},"width":1296,"height":768},"resize":{"src":"/static/906218b1e9e0ad23d6cd43b04e31ab16/f3583/main_pyenv.png","width":1200,"height":711}}},"embeddedImages":null,"videoSourceURL":null,"videoTitle":null},"excerpt":"Overview Pyenv lets you easily switch between multiple versions of Python. It's simple, unobtrusive, and follows the UNIX tradition of single-purpose tools that…"}},"pageContext":{"slug":"how-to-install-pyenv-on-macos","previousPost":{"id":"fbd09b13-8337-5157-92be-c93730f35ad2","frontmatter":{"title":"Datasette","slug":"datasette"},"excerpt":"What is Datasette? Installation Using Homebrew for Mac sqlite-utils sqlite-utils  is python CLI utility and library for manipulating SQLite…"},"nextPost":{"id":"2c31e889-ff5a-5ba7-aebd-4d7bdd396f01","frontmatter":{"title":"How To Deploy Gatsby Website to GitHub Pages Using GitHub Actions","slug":"how-to-deploy-gatsby-to-github-pages"},"excerpt":"Overview This article will help you to publish your gatsby site to github pages using github actions. Gatsby Gatsby is a react based GraphQL…"}}},"staticQueryHashes":["2325592527","3156252089","3827573359"]}