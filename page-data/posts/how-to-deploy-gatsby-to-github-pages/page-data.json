{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/how-to-deploy-gatsby-to-github-pages","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How To Deploy Gatsby Website to GitHub Pages Using GitHub Actions\",\n  \"slug\": \"how-to-deploy-gatsby-to-github-pages\",\n  \"image\": \"./images/main_gatsby_githubpages.png\",\n  \"date\": \"2022-03-16T00:00:00.000Z\",\n  \"author\": \"youngjae lim\",\n  \"category\": \"Gatsby\",\n  \"tags\": [\"react\", \"devops\", \"github\", \"ci/cd\", \"github actions\"],\n  \"readTime\": 30,\n  \"embeddedImages\": [\"./images/github_dev_branch.png\", \"./images/github_default_branch.png\", \"./images/github_gh-pages_branch.png\", \"./images/github_pages.png\", \"./images/github_actions.png\", \"./images/package_json.png\", \"./images/youngjae-lim.github.io.png\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"overview\"\n  }, \"Overview\"), mdx(\"p\", null, \"This article will help you to publish your gatsby site to github pages using github actions.\"), mdx(\"h3\", {\n    \"id\": \"gatsby\"\n  }, \"Gatsby\"), mdx(\"p\", null, \"Gatsby is a react based GraphQL powered static site generator. It simply means it combines the power of react, GraphQL, webpack and other front end tools to offer a great developer experience.\"), mdx(\"h3\", {\n    \"id\": \"github-pages\"\n  }, \"GitHub Pages\"), mdx(\"p\", null, \"GitHub Pages are public webpages hosted and easily published through GitHub.\"), mdx(\"h3\", {\n    \"id\": \"github-actions\"\n  }, \"GitHub Actions\"), mdx(\"p\", null, \"GitHub Actions is a continuous integration and continuous delivery (CI/CD) platform that allows you to automate your build, test, and deployment pipeline. You can create workflows that build and test every pull request to your repository, or deploy merged pull requests to production.\"), mdx(\"h3\", {\n    \"id\": \"objective\"\n  }, \"Objective\"), mdx(\"p\", null, \"Our objective here is to use Github Actions to publish our webiste to Github pages whenever we push our codes to the remote repository or make a pull request to the dev branch.\"), mdx(\"h2\", {\n    \"id\": \"steps\"\n  }, \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-create-a-github-respository\"\n  }, \"1. Create a GitHub Respository\"), mdx(\"p\", null, \"  I named my repository \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"youngjae-lim.github.io\"), \".\"), mdx(\"h3\", {\n    \"id\": \"2-initialize-git-in-your-local-gatsby-project-directory\"\n  }, \"2. Initialize git in your local Gatsby project directory\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git init\\n\")), mdx(\"h3\", {\n    \"id\": \"3-create-a-branch-called-dev-in-your-local-repository-and-push-it-to-the-github-remote-repository\"\n  }, \"3. Create a branch called \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"dev\"), \" in your local repository and push it to the GitHub remote repository\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git checkout -b dev\\ngit status\\ngit add .\\ngit commit -m \\\"initial commit to dev branch\\\"\\n\\ngit remote add origin https://github.com/youngjae-lim/youngjae-lim.github.io \\ngit push origin dev \\n\")), mdx(\"p\", null, \"  Now that you pushed the local repository to the remote repository, you should be able to see the same project in your GitHub repository:\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[0]),\n    alt: \"github dev branch\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"blockquote\", {\n    display: \"warning\"\n  }, \"Also make sure that the dev branch is your default branch in settings of your remote repository:\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[1]),\n    alt: \"github default branch\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h3\", {\n    \"id\": \"4-create-a-new-orphan-repository-called-gh-pages-to-which-we-will-deploy-using-github-actions-and-push-it-to-the-remote-repository\"\n  }, \"4. Create a new orphan repository called \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"gh-pages\"), \" to which we will deploy using Github Actions and push it to the remote repository\"), mdx(\"p\", null, \"  In other words, we will work in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dev\"), \" branch locally to develop our website and once we push to the remote repository, it will trigger GitHub Actions that build our Gatsby Website and deploy to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gh-pages\"), \" branch automatically. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git checkout --orphan gh-pages\\ngit rm -rf .\\ngit commit --allow-empty \\\"initial commit to gh-pages branch\\\"\\ngit push origin gh-pages\\n\")), mdx(\"p\", null, \"  If you check your remote GitHub repository, you should see an empty repository \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gh-pages\"), \" created.\"), mdx(\"h3\", {\n    \"id\": \"5-make-your-github-pages-site-is-being-built-from-the-gh-pages-branch\"\n  }, \"5. Make your GitHub Pages site is being built from the \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"gh-pages\"), \" branch\"), mdx(\"blockquote\", {\n    display: \"warning\"\n  }, \"As you see in the image below, the `Source` must be set to the branch gh-pages.\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[3]),\n    alt: \"github default branch for github pages\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h3\", {\n    \"id\": \"6-create-a-github-actions\"\n  }, \"6. Create a \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"GitHub Actions\")), mdx(\"p\", null, \"  Create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./github/workflows\"), \" directory right under your local project root and create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deploy.yml\"), \" like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\",\n    \"metastring\": \"file=./github/workflows/deploy.yml highlights=32,36\",\n    \"file\": \"./github/workflows/deploy.yml\",\n    \"highlights\": \"32,36\"\n  }, \"# This is a basic workflow to help you get started with Actions\\nname: CI\\n\\n# Controls when the action will run.\\non:\\n  # Triggers the workflow on push or pull request events but only for the dev branch\\n  push:\\n    branches: [dev]\\n  pull_request:\\n    branches: [dev]\\n\\n  # Allows you to run this workflow manually from the Actions tab\\n  workflow_dispatch:\\n\\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\\njobs:\\n  # This workflow contains a single job called \\\"build\\\"\\n  build:\\n    # The type of runner that the job will run on\\n    runs-on: ubuntu-latest\\n\\n    # Steps represent a sequence of tasks that will be executed as part of the job\\n    steps:\\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\\n      - uses: actions/checkout@v2\\n\\n      - name: Setup Node.js environment\\n        uses: actions/setup-node@v2.1.5\\n        with:\\n          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0\\n          node-version: 16\\n      - run: npm ci # Note that this step needs package-lock.json file\\n\\n      - run: npm run build --if-present\\n\\n      - run: npm test\\n\\n      - name: Deploy to GitHub Pages\\n        uses: JamesIves/github-pages-deploy-action@v4.2.5\\n        with:\\n          branch: gh-pages # The branch the action should deploy to.\\n          folder: public # The folder the action should deploy.\\n\")), mdx(\"p\", null, \"  Before we push this change to the remote repository, we have to make two simple changes:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Modify \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \":\\nChange the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"exit\"), \" code 1 in the default \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"test\"), \" script in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" to 0. So your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" should look like this:\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[5]),\n    alt: \"package.json\",\n    mdxType: \"GatsbyImage\"\n  })), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Make sure that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package-lock.json\"), \" is not included in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".gitignore\"), \" file: the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm ci\"), \" step in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deploy.yml\"), \" workflow needs \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package-lock.json\"), \" file, so it should be able to be pushed to the remote repository. \"))), mdx(\"p\", null, \"Now that we created our deploy GitHub Actions in our local repository, let's push the changes to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dev\"), \" branch of the remote GitHub repository. Make sure you are currently working in your local \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dev\"), \" branch:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git checkout dev\\ngit add .\\ngit commit -m \\\"create a deploy GitHub Actions\\\"\\ngit push origin dev\\n\")), mdx(\"p\", null, \"  This will automatically trigger our Gatsby build script and publish the website to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gh-pages\"), \" branch. You can check the real-time build steps from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Actions\"), \" tab in your remote repository:\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[4]),\n    alt: \"github actions\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"p\", null, \"  If the workflow ran successfully, then please switch to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gh-pages\"), \" branch to see if all the production contents are published:\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[2]),\n    alt: \"github gh-pages branch\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h3\", {\n    \"id\": \"7-test-out-the-github-pages\"\n  }, \"7. Test out the Github Pages\"), mdx(\"p\", null, \"Open up your favorite web browser and type your github pages web address. The web address should be something like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://<your_repository_name>.github.io\"), \". Note that it might take a second to load the github pages if you access it for the first time. \"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[6]),\n    alt: \"github gh-pages branch\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(Link, {\n    to: \"/posts\",\n    className: \"btn center-btn\",\n    mdxType: \"Link\"\n  }, \"all posts\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview","items":[{"url":"#gatsby","title":"Gatsby"},{"url":"#github-pages","title":"GitHub Pages"},{"url":"#github-actions","title":"GitHub Actions"},{"url":"#objective","title":"Objective"}]},{"url":"#steps","title":"Steps","items":[{"url":"#1-create-a-github-respository","title":"1. Create a GitHub Respository"},{"url":"#2-initialize-git-in-your-local-gatsby-project-directory","title":"2. Initialize git in your local Gatsby project directory"},{"url":"#3-create-a-branch-called-dev-in-your-local-repository-and-push-it-to-the-github-remote-repository","title":"3. Create a branch called dev in your local repository and push it to the GitHub remote repository"},{"url":"#4-create-a-new-orphan-repository-called-gh-pages-to-which-we-will-deploy-using-github-actions-and-push-it-to-the-remote-repository","title":"4. Create a new orphan repository called gh-pages to which we will deploy using Github Actions and push it to the remote repository"},{"url":"#5-make-your-github-pages-site-is-being-built-from-the-gh-pages-branch","title":"5. Make your GitHub Pages site is being built from the gh-pages branch"},{"url":"#6-create-a-github-actions","title":"6. Create a GitHub Actions"},{"url":"#7-test-out-the-github-pages","title":"7. Test out the Github Pages"}]}]},"frontmatter":{"title":"How To Deploy Gatsby Website to GitHub Pages Using GitHub Actions","author":"youngjae lim","category":"Gatsby","tags":["react","devops","github","ci/cd","github actions"],"slug":"how-to-deploy-gatsby-to-github-pages","date":"March 16th, 2022","readTime":30,"image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/8294a71fcf3dfbb8113817e5196fa3a1/3cca7/main_gatsby_githubpages.png","srcSet":"/static/8294a71fcf3dfbb8113817e5196fa3a1/79282/main_gatsby_githubpages.png 428w,\n/static/8294a71fcf3dfbb8113817e5196fa3a1/040dc/main_gatsby_githubpages.png 855w,\n/static/8294a71fcf3dfbb8113817e5196fa3a1/3cca7/main_gatsby_githubpages.png 1710w","sizes":"(min-width: 1710px) 1710px, 100vw"},"sources":[{"srcSet":"/static/8294a71fcf3dfbb8113817e5196fa3a1/fa09f/main_gatsby_githubpages.webp 428w,\n/static/8294a71fcf3dfbb8113817e5196fa3a1/3b5b9/main_gatsby_githubpages.webp 855w,\n/static/8294a71fcf3dfbb8113817e5196fa3a1/823ec/main_gatsby_githubpages.webp 1710w","type":"image/webp","sizes":"(min-width: 1710px) 1710px, 100vw"}]},"width":1710,"height":952},"resize":{"src":"/static/8294a71fcf3dfbb8113817e5196fa3a1/f3583/main_gatsby_githubpages.png","width":1200,"height":668}}},"embeddedImages":[{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182828","images":{"fallback":{"src":"/static/a91b7c3e3d1316dbc52582b4f7043e6f/57ad8/github_dev_branch.png","srcSet":"/static/a91b7c3e3d1316dbc52582b4f7043e6f/e7989/github_dev_branch.png 473w,\n/static/a91b7c3e3d1316dbc52582b4f7043e6f/1bb57/github_dev_branch.png 946w,\n/static/a91b7c3e3d1316dbc52582b4f7043e6f/57ad8/github_dev_branch.png 1892w","sizes":"(min-width: 1892px) 1892px, 100vw"},"sources":[{"srcSet":"/static/a91b7c3e3d1316dbc52582b4f7043e6f/08f1a/github_dev_branch.webp 473w,\n/static/a91b7c3e3d1316dbc52582b4f7043e6f/7928b/github_dev_branch.webp 946w,\n/static/a91b7c3e3d1316dbc52582b4f7043e6f/0858c/github_dev_branch.webp 1892w","type":"image/webp","sizes":"(min-width: 1892px) 1892px, 100vw"}]},"width":1892,"height":826}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182828","images":{"fallback":{"src":"/static/ceb04af6b47fddbc13139e74de530a99/7977f/github_default_branch.png","srcSet":"/static/ceb04af6b47fddbc13139e74de530a99/16f0d/github_default_branch.png 312w,\n/static/ceb04af6b47fddbc13139e74de530a99/831f6/github_default_branch.png 624w,\n/static/ceb04af6b47fddbc13139e74de530a99/7977f/github_default_branch.png 1247w","sizes":"(min-width: 1247px) 1247px, 100vw"},"sources":[{"srcSet":"/static/ceb04af6b47fddbc13139e74de530a99/59155/github_default_branch.webp 312w,\n/static/ceb04af6b47fddbc13139e74de530a99/4c754/github_default_branch.webp 624w,\n/static/ceb04af6b47fddbc13139e74de530a99/53286/github_default_branch.webp 1247w","type":"image/webp","sizes":"(min-width: 1247px) 1247px, 100vw"}]},"width":1247,"height":730}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182828","images":{"fallback":{"src":"/static/6b4ef472f349fac550a75b3388552454/f316a/github_gh-pages_branch.png","srcSet":"/static/6b4ef472f349fac550a75b3388552454/f87d5/github_gh-pages_branch.png 312w,\n/static/6b4ef472f349fac550a75b3388552454/e9a3b/github_gh-pages_branch.png 625w,\n/static/6b4ef472f349fac550a75b3388552454/f316a/github_gh-pages_branch.png 1249w","sizes":"(min-width: 1249px) 1249px, 100vw"},"sources":[{"srcSet":"/static/6b4ef472f349fac550a75b3388552454/31584/github_gh-pages_branch.webp 312w,\n/static/6b4ef472f349fac550a75b3388552454/f4bf5/github_gh-pages_branch.webp 625w,\n/static/6b4ef472f349fac550a75b3388552454/8d388/github_gh-pages_branch.webp 1249w","type":"image/webp","sizes":"(min-width: 1249px) 1249px, 100vw"}]},"width":1249,"height":725}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182828","images":{"fallback":{"src":"/static/442f7102c203969a5fc2b996f513b8a3/50723/github_pages.png","srcSet":"/static/442f7102c203969a5fc2b996f513b8a3/546fd/github_pages.png 311w,\n/static/442f7102c203969a5fc2b996f513b8a3/ed088/github_pages.png 621w,\n/static/442f7102c203969a5fc2b996f513b8a3/50723/github_pages.png 1242w","sizes":"(min-width: 1242px) 1242px, 100vw"},"sources":[{"srcSet":"/static/442f7102c203969a5fc2b996f513b8a3/44740/github_pages.webp 311w,\n/static/442f7102c203969a5fc2b996f513b8a3/1546e/github_pages.webp 621w,\n/static/442f7102c203969a5fc2b996f513b8a3/2ec4b/github_pages.webp 1242w","type":"image/webp","sizes":"(min-width: 1242px) 1242px, 100vw"}]},"width":1242,"height":686}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182828","images":{"fallback":{"src":"/static/8f0bc4f4dc36636bc29291e2318146ea/4f654/github_actions.png","srcSet":"/static/8f0bc4f4dc36636bc29291e2318146ea/6bdc7/github_actions.png 246w,\n/static/8f0bc4f4dc36636bc29291e2318146ea/4ff6d/github_actions.png 493w,\n/static/8f0bc4f4dc36636bc29291e2318146ea/4f654/github_actions.png 985w","sizes":"(min-width: 985px) 985px, 100vw"},"sources":[{"srcSet":"/static/8f0bc4f4dc36636bc29291e2318146ea/c1124/github_actions.webp 246w,\n/static/8f0bc4f4dc36636bc29291e2318146ea/2d0c3/github_actions.webp 493w,\n/static/8f0bc4f4dc36636bc29291e2318146ea/1752f/github_actions.webp 985w","type":"image/webp","sizes":"(min-width: 985px) 985px, 100vw"}]},"width":985,"height":698}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282838","images":{"fallback":{"src":"/static/ab855ee14d53a549bab8b3f0c863a6a5/5db7c/package_json.png","srcSet":"/static/ab855ee14d53a549bab8b3f0c863a6a5/5b36a/package_json.png 249w,\n/static/ab855ee14d53a549bab8b3f0c863a6a5/26298/package_json.png 498w,\n/static/ab855ee14d53a549bab8b3f0c863a6a5/5db7c/package_json.png 996w","sizes":"(min-width: 996px) 996px, 100vw"},"sources":[{"srcSet":"/static/ab855ee14d53a549bab8b3f0c863a6a5/cbe7b/package_json.webp 249w,\n/static/ab855ee14d53a549bab8b3f0c863a6a5/8239c/package_json.webp 498w,\n/static/ab855ee14d53a549bab8b3f0c863a6a5/0f8e9/package_json.webp 996w","type":"image/webp","sizes":"(min-width: 996px) 996px, 100vw"}]},"width":996,"height":216.00000000000003}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282838","images":{"fallback":{"src":"/static/eb0b7b160c94c6ae851b504154dde1bd/d97b7/youngjae-lim.github.io.png","srcSet":"/static/eb0b7b160c94c6ae851b504154dde1bd/1af44/youngjae-lim.github.io.png 389w,\n/static/eb0b7b160c94c6ae851b504154dde1bd/f2707/youngjae-lim.github.io.png 778w,\n/static/eb0b7b160c94c6ae851b504154dde1bd/d97b7/youngjae-lim.github.io.png 1556w","sizes":"(min-width: 1556px) 1556px, 100vw"},"sources":[{"srcSet":"/static/eb0b7b160c94c6ae851b504154dde1bd/cd9fe/youngjae-lim.github.io.webp 389w,\n/static/eb0b7b160c94c6ae851b504154dde1bd/170bd/youngjae-lim.github.io.webp 778w,\n/static/eb0b7b160c94c6ae851b504154dde1bd/c4590/youngjae-lim.github.io.webp 1556w","type":"image/webp","sizes":"(min-width: 1556px) 1556px, 100vw"}]},"width":1556,"height":934}}}],"videoSourceURL":null,"videoTitle":null},"excerpt":"Overview This article will help you to publish your gatsby site to github pages using github actions. Gatsby Gatsby is a react based GraphQL powered static site…"}},"pageContext":{"slug":"how-to-deploy-gatsby-to-github-pages","previousPost":{"id":"ef9f5506-806b-53f7-961d-426d5dc5506e","frontmatter":{"title":"How To Install Pyenv on MacOS","slug":"how-to-install-pyenv-on-macos"},"excerpt":"Overview Pyenv lets you easily switch between multiple versions of Python. It's simple, unobtrusive, and follows the UNIX tradition of…"},"nextPost":{"id":"b60616f0-b0a3-583f-8b44-2ae679d6ddd0","frontmatter":{"title":"How To Remove Old and Merged Git Branches Easily","slug":"how-to-remove-oldandmerged-git-branches-easily"},"excerpt":"Overview Let's say that you do your all of your development on a feature branch in your local repository and push it to the remote…"}}},"staticQueryHashes":["2325592527","3156252089","3827573359"]}