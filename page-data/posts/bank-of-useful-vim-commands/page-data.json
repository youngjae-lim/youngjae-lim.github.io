{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/bank-of-useful-vim-commands","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Bank of Useful Vim Commands\",\n  \"slug\": \"bank-of-useful-vim-commands\",\n  \"image\": \"./images/main_vim.png\",\n  \"date\": \"2022-03-24T00:00:00.000Z\",\n  \"author\": \"youngjae lim\",\n  \"category\": \"Vim\",\n  \"tags\": [\"vim\", \"tool\"],\n  \"readTime\": 10\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"overview\"\n  }, \"Overview\"), mdx(\"p\", null, \"This article shows you some useful vim commands that I enjoy using particularly when I code. I will add more commands once in a while, so this article will be constantly updated. I will keep you posted on that.\"), mdx(\"h2\", {\n    \"id\": \"navigation\"\n  }, \"Navigation\"), mdx(\"h2\", {\n    \"id\": \"editing\"\n  }, \"Editing\"), mdx(\"h3\", {\n    \"id\": \"vim-surround-plugin\"\n  }, \"vim-surround plugin\"), mdx(\"p\", null, \"I am a big fan of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vim-surround\"), \" plugin which allows me to easily edit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HTML\"), \". One of annoying thing when editing HTML is that you have to surround a certain set of elements with anther element. For example,\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<span>Hello!!</span>\\n\")), mdx(\"p\", null, \"I would like to surround the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"span\"), \" element with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" element. Here is just one line of span element. But what if you have many lines of elements that you want to surround? Then what I usually do is to auto complete the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" tag and move the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"span\"), \" tag bewteen the opening div and the closing div.\"), mdx(\"p\", null, \"But with the help of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vim-surround\"), \", you just visually select(i.e., linewise \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"visual mode\"), \") the line(s) of codes that you woudl like to surround and then hit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"S<div>\"), \". This will make:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\",\n    \"metastring\": \"add=1,3\",\n    \"add\": \"1,3\"\n  }, \"<div>\\n  <span>Hello!</span>\\n</div>\\n\")), mdx(Link, {\n    to: \"/posts\",\n    className: \"btn center-btn\",\n    mdxType: \"Link\"\n  }, \"all posts\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#navigation","title":"Navigation"},{"url":"#editing","title":"Editing","items":[{"url":"#vim-surround-plugin","title":"vim-surround plugin"}]}]},"frontmatter":{"title":"Bank of Useful Vim Commands","author":"youngjae lim","category":"Vim","tags":["vim","tool"],"slug":"bank-of-useful-vim-commands","date":"March 24th, 2022","readTime":10,"image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/4d05bbe8499f276ae7242afc7c7d036e/d36cd/main_vim.png","srcSet":"/static/4d05bbe8499f276ae7242afc7c7d036e/f1e6f/main_vim.png 251w,\n/static/4d05bbe8499f276ae7242afc7c7d036e/45cde/main_vim.png 501w,\n/static/4d05bbe8499f276ae7242afc7c7d036e/d36cd/main_vim.png 1002w","sizes":"(min-width: 1002px) 1002px, 100vw"},"sources":[{"srcSet":"/static/4d05bbe8499f276ae7242afc7c7d036e/210c7/main_vim.webp 251w,\n/static/4d05bbe8499f276ae7242afc7c7d036e/08445/main_vim.webp 501w,\n/static/4d05bbe8499f276ae7242afc7c7d036e/88f22/main_vim.webp 1002w","type":"image/webp","sizes":"(min-width: 1002px) 1002px, 100vw"}]},"width":1002,"height":660},"resize":{"src":"/static/4d05bbe8499f276ae7242afc7c7d036e/f3583/main_vim.png","width":1200,"height":790}}},"embeddedImages":null,"videoSourceURL":null,"videoTitle":null},"excerpt":"Overview This article shows you some useful vim commands that I enjoy using particularly when I code. I will add more commands once in a while, so this article…"}},"pageContext":{"slug":"bank-of-useful-vim-commands","previousPost":{"id":"5af74701-0388-5bee-b670-dbcc890518bd","frontmatter":{"title":"SvelteKit With Headless WordPress as CMS","slug":"sveltekit-with-headless-wordpress-cms"},"excerpt":"Overview This article will show you how to get started with development of SvelteKit front-end web application using headless WordPress as a…"},"nextPost":{"id":"a721f592-9053-5477-a9b9-d7c98ba090b1","frontmatter":{"title":"How To Add Utterances Comment System To Your Gatsby Blog","slug":"how-to-add-utterances-to-gatsby-blog"},"excerpt":"Overview This article shows you how to add  utterances  light weight comments widget to your Gatsby website. The widget is built on  GitHub…"}}},"staticQueryHashes":["2325592527","3156252089","3827573359"]}