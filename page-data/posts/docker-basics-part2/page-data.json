{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/docker-basics-part2","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Docker Basics - Part 2, Data & Volumes\",\n  \"slug\": \"docker-basics-part2\",\n  \"image\": \"./images/main_data_volumes.png\",\n  \"date\": \"2021-02-27T00:00:00.000Z\",\n  \"author\": \"youngjae lim\",\n  \"published\": true,\n  \"category\": \"Docker\",\n  \"tags\": [\"docker\", \"tool\"],\n  \"readTime\": 10\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"docker-basics-part-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Docker Basics Part 2\", mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#docker-basics-part-2\",\n    \"aria-label\": \"docker basics part 2 permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"h2\", {\n    \"id\": \"data--volumes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Data & Volumes\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#data--volumes\",\n    \"aria-label\": \"data  volumes permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Images are read-only - once they're created, they can't change (you have to rebuild them to\\nupdate them).\"), mdx(\"p\", null, \"Containers on the other hand can read and write - they add a thin \\\"read-write layer\\\" on top\\nof the image. That means that they can make changes to the files and folders in the image without\\nactually changing the image.\\nBut even with read-write Containers, two big problems occur in many applications using Docker:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Data written in a Container doesn't persist: If the Container is stopped and removed, all\\ndata written in the Container is lost\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The container Container can't interact with the host filesystem: If you change something\\nin your host project folder, those changes are not reflected in the running container. You\\nneed to rebuild the image (which copies the folders) and start a new container\"))), mdx(\"p\", null, \"Problem 1 can be solved with a Docker feature called \\\"Volumes\\\". Problem 2 can be solved by\\nusing \\\"Bind Mounts\\\".\"), mdx(\"h3\", {\n    \"id\": \"volumes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Volumes\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#volumes\",\n    \"aria-label\": \"volumes permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Volumes are folders (and files) managed on your host machine which are connected to folders /\\nfiles inside of a container.\"), mdx(\"p\", null, \"There are two types of Volumes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anonymous Volumes: Created via -v /some/path/in/container and removed\\nautomatically when a container is removed because of --rm added on the docker run\\ncommand\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Named Volumes: Created via -v some-name:/some/path/in/container and NOT\\nremoved automatically\")), mdx(\"p\", null, \"With Volumes, data can be passed into a container (if the folder on the host machine is not\\nempty) and it can be saved when written by a container (changes made by the container are\\nreflected on your host machine).\"), mdx(\"p\", null, \"Volumes are created and managed by Docker - as a developer, you don't necessarily know\\nwhere exactly the folders are stored on your host machine. Because the data stored in there is\\nnot meant to be viewed or edited by you - use \\\"Bind Mounts\\\" if you need to do that!\"), mdx(\"p\", null, \"Instead, especially Named Volumes can help you with persisting data.\"), mdx(\"p\", null, \"Since data is not just written in the container but also on your host machine, the data survives\\neven if a container is removed (because the Named Volume isn't removed in that case). Hence\\nyou can use Named Volumes to persist container data (e.g. log files, uploaded files, database files\\netc)-\"), mdx(\"p\", null, \"Anonymous Volumes can be useful for ensuring that some Container-internal folder is not\\noverwritten by a \\\"Bind Mount\\\" for example.\"), mdx(\"p\", null, \"By default, Anonymous Volumes are removed if the Container was started with the --rm option\\nand was stopped thereafter. They are not removed if a Container was started (and then\\nremoved) without that option.\"), mdx(\"p\", null, \"Named Volumes are never removed, you need to do that manually (via docker volume rm\\nVOL_NAME , see reference below).\"), mdx(\"h3\", {\n    \"id\": \"bind-mounts\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Bind Mounts\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#bind-mounts\",\n    \"aria-label\": \"bind mounts permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"Bind Mounts are very similiar to Volumes - the key difference is, that you, the developer, set the\\npath on your host machine that should be connected to some path inside of a Container.\"), mdx(\"p\", null, \"You do that via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-v /absolute/path/on/your/host/machine:/some/path/inside/of/container\"), \".\"), mdx(\"p\", null, \"The path in front of the : (i.e. the path on your host machine, to the folder that should be shared\\nwith the container) has to be an absolute path when using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-v\"), \" on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker run\"), \" command.\"), mdx(\"p\", null, \"Bind Mounts are very useful for sharing data with a Container which might change whilst the\\ncontainer is running - e.g. your source code that you want to share with the Container running\\nyour development environment.\"), mdx(\"p\", null, \"Don't use Bind Mounts if you just want to persist data - Named Volumes should be used for\\nthat (exception: You want to be able to inspect the data written during development).\"), mdx(\"p\", null, \"In general, Bind Mounts are a great tool during development - they're not meant to be used in\\nproduction (since you're container should run isolated from it's host machine).\"), mdx(\"h3\", {\n    \"id\": \"key-docker-commands\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Key Docker Commands\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#key-docker-commands\",\n    \"aria-label\": \"key docker commands permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker run -v /path/in/container IMAGE\"), \": Create an Anonymous Volume inside a\\nContainer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker run -v some-name:/path/in/container IMAGE\"), \": Create a Named Volume (named\\nsome-name ) inside a Container\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker run -v /path/on/your/host/machine:path/in/container IMAGE\"), \": Create a Bind\\nMount and connect a local path on your host machine to some path in the Container\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker volume ls\"), \": List all currently active / stored Volumes (by all Containers)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker volume create VOL_NAME\"), \": Create a new (Named) Volume named VOL_NAME . You\\ntypically don't need to do that, since Docker creates them automatically for you if they don't\\nexist when running a container\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker volume rm VOL_NAME\"), \": Remove a Volume by it's name (or ID)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker volume prune\"), \": Remove all unused Volumes (i.e. not connected to a currently\\nrunning or stopped container)\")), mdx(Link, {\n    to: \"/posts\",\n    className: \"btn center-btn\",\n    mdxType: \"Link\"\n  }, \"all posts\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#docker-basics-part-2","title":"Docker Basics Part 2","items":[{"url":"#data--volumes","title":"Data & Volumes","items":[{"url":"#volumes","title":"Volumes"},{"url":"#bind-mounts","title":"Bind Mounts"},{"url":"#key-docker-commands","title":"Key Docker Commands"}]}]}]},"frontmatter":{"title":"Docker Basics - Part 2, Data & Volumes","author":"youngjae lim","category":"Docker","tags":["docker","tool"],"slug":"docker-basics-part2","date":"February 27th, 2021","readTime":10,"image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/3bca35d936d5478cb4af2783862f06d4/7eecd/main_data_volumes.png","srcSet":"/static/3bca35d936d5478cb4af2783862f06d4/d621c/main_data_volumes.png 249w,\n/static/3bca35d936d5478cb4af2783862f06d4/ccf12/main_data_volumes.png 497w,\n/static/3bca35d936d5478cb4af2783862f06d4/7eecd/main_data_volumes.png 994w","sizes":"(min-width: 994px) 994px, 100vw"},"sources":[{"srcSet":"/static/3bca35d936d5478cb4af2783862f06d4/ebca0/main_data_volumes.webp 249w,\n/static/3bca35d936d5478cb4af2783862f06d4/2b1a3/main_data_volumes.webp 497w,\n/static/3bca35d936d5478cb4af2783862f06d4/2dc56/main_data_volumes.webp 994w","type":"image/webp","sizes":"(min-width: 994px) 994px, 100vw"}]},"width":994,"height":502},"resize":{"src":"/static/3bca35d936d5478cb4af2783862f06d4/f3583/main_data_volumes.png","width":1200,"height":606}}},"embeddedImages":null,"videoSourceURL":null,"videoTitle":null},"excerpt":"Docker Basics Part 2 Data & Volumes Images are read-only - once they're created, they can't change (you have to rebuild them to\nupdate them). Containers on the…"}},"pageContext":{"slug":"docker-basics-part2","previousPost":{"id":"7688eedf-bc6f-53c6-9a4f-214d4175adfb","frontmatter":{"title":"Docker Basics - Part 1, Images & Containers","slug":"docker-basics-part1","tags":["docker","tool"]},"excerpt":"Docker Basics Part 1 Images & Containers Images Images are one of the two core building blocks Docker is all about (the other one is…"},"nextPost":{"id":"047ec41d-0ff2-5e7a-a5ba-990341cfc13f","frontmatter":{"title":"Docker Basics - Part 3, Docker Networks","slug":"docker-basics-part3","tags":["docker","tool"]},"excerpt":"Docker Basics Part 3 Networks / Requests In many application, you'll need more than one container - for two main reasons: It's considered a…"},"relatedPosts":[{"id":"7688eedf-bc6f-53c6-9a4f-214d4175adfb","frontmatter":{"title":"Docker Basics - Part 1, Images & Containers","slug":"docker-basics-part1","tags":["docker","tool"]},"excerpt":"Docker Basics Part 1 Images & Containers Images Images are one of the two core building blocks Docker is all about (the other one is…"},{"id":"047ec41d-0ff2-5e7a-a5ba-990341cfc13f","frontmatter":{"title":"Docker Basics - Part 3, Docker Networks","slug":"docker-basics-part3","tags":["docker","tool"]},"excerpt":"Docker Basics Part 3 Networks / Requests In many application, you'll need more than one container - for two main reasons: It's considered a…"},{"id":"548eb3a7-5983-53c9-bfbe-1d0d9fc5ce71","frontmatter":{"title":"Docker Basics - Part 4, Docker Compose","slug":"docker-basics-part4","tags":["docker","tool"]},"excerpt":"Docker Basics Part 4 Docker Compose Docker Compose is an additional tool, offered by the Docker ecosystem, which helps with\norchestration…"}]}},"staticQueryHashes":["1552795008","2356771501","3156252089"]}