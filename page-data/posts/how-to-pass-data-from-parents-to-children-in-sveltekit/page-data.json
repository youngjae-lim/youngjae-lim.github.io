{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/how-to-pass-data-from-parents-to-children-in-sveltekit","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How To Pass Data From Layout Page To descendant pages and components In SvelteKit\",\n  \"slug\": \"how-to-pass-data-from-parents-to-children-in-sveltekit\",\n  \"image\": \"./images/main_sveltekit.png\",\n  \"date\": \"2022-04-02T00:00:00.000Z\",\n  \"author\": \"youngjae lim\",\n  \"category\": \"SvelteKit\",\n  \"tags\": [\"sveltekit\", \"front-end\"],\n  \"readTime\": 10,\n  \"embeddedImages\": [\"./images/welcome_to_sveltekit.png\", \"./images/stuff.png\", \"./images/direct_import.png\", \"./images/context.png\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Overview\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"In the previous article, we went over how to create a standalone endpoint and fetch data from it in a layout and its descendant page. We specifically used a loading input \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" to access the fetched data.\"), mdx(\"p\", null, \"But there are other ways to pass data around in SvelteKit and we will go over them in this article. In order for this article to be comprehensive, I will breifly go over \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" again:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Context\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stuff\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct import\")), mdx(\"h2\", {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Getting Started\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm init svelte@next sveltekit-tutorial\\ncd sveltekit-tutorial\\nvim .\\nnpm install\\nnpm run dev\\n\")), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[0]),\n    alt: \"sveltekit\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h2\", {\n    \"id\": \"1-context\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"1. Context\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#1-context\",\n    \"aria-label\": \"1 context permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"In Svelte and SvelteKit, any components can communicate with each other using Context API. By using it, you don't need to pass data and functions as props, or creating a lot of events to make pages and components to talk to each other.\"), mdx(\"p\", null, \"Let's create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"__layout.svelte\"), \" to work on our first example:\"), mdx(\"p\", null, \"In the following layout page, we set context with a parent object.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/__layout.svelte highlights=2,6\",\n    \"file\": \"./src/__layout.svelte\",\n    \"highlights\": \"2,6\"\n  }, \"<script>\\n  import { setContext } from \\\"svelte\\\";\\n\\n  const parent = { name: \\\"John\\\", email: \\\"john@example.com\\\" };\\n\\n  setContext(\\\"parent\\\", parent);\\n</script>\\n\\n<h1>Parent</h1>\\n\\n<slot />\\n\")), mdx(\"p\", null, \"Here we simpley import our grandchild component.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/index.svelte\",\n    \"file\": \"./src/index.svelte\"\n  }, \"<script>\\n  import Grandchild from \\\"$lib/Grandchild.svelte\\\";\\n</script>\\n\\n<h2>Child</h2>\\n\\n<Grandchild />\\n\")), mdx(\"p\", null, \"In this grandchild component, we use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getContext()\"), \" to access \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"parent\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/lib/Grandchild.svelte highlights=2,4\",\n    \"file\": \"./src/lib/Grandchild.svelte\",\n    \"highlights\": \"2,4\"\n  }, \"<script>\\n  import { getContext } from \\\"svelte\\\";\\n\\n  const parent = getContext(\\\"parent\\\");\\n</script>\\n\\n<h3>Grand Child</h3>\\n\\n<pre>{JSON.stringify(parent)}</pre>\\n\")), mdx(\"p\", null, \"Make sure to spin up dev server and access \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3000\"), \" in a browser:\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[3]),\n    alt: \"sveltekit\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h2\", {\n    \"id\": \"2-stuff\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"2. Stuff\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#2-stuff\",\n    \"aria-label\": \"2 stuff permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"In \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SvelteKit\"), \", the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"load\"), \" function receives a field called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" as an object containing six fields:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"url\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"params\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"props\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fetch\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"session\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"stuff\"))), mdx(\"p\", null, \"We will take a look at how \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" works here.\"), mdx(\"p\", null, \"In this layout page, we hard-code a parent object having a name and an email properties and attach it to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \". This \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" will be available to any subsequent \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"load\"), \" functions in the descendant layouts and pages.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/__layout.svelte highlights=3,7-9\",\n    \"file\": \"./src/__layout.svelte\",\n    \"highlights\": \"3,7-9\"\n  }, \"<script context=\\\"module\\\">\\n  export const load = () => {\\n    const parent = { name: \\\"John\\\", email: \\\"john@example.com\\\" };\\n\\n    return {\\n      props: {},\\n      stuff: {\\n        parent,\\n      },\\n    };\\n  };\\n</script>\\n\\n<h1>Parent</h1>\\n\\n<slot />\\n\")), mdx(\"p\", null, \"To be able to access \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" in a descendant page, we need to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"load()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" to extract the parent object and attach it to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"props\"), \". Then we export \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"parent\"), \" as a variable in the second \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<script>\"), \" tag:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/index.svelte highlights=2,6-8,15\",\n    \"file\": \"./src/index.svelte\",\n    \"highlights\": \"2,6-8,15\"\n  }, \"<script context=\\\"module\\\">\\n  export async function load({ stuff }) {\\n    const { parent } = stuff;\\n\\n    return {\\n      props: {\\n        parent,\\n      },\\n    };\\n  }\\n</script>\\n\\n<script>\\n  import Grandchild from \\\"$lib/Grandchild.svelte\\\";\\n  export let parent;\\n</script>\\n\\n<h2>Child</h2>\\n\\n<pre>{JSON.stringify(parent)}</pre>\\n\\n<Grandchild />\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/lib/Grandchild.svelte\",\n    \"file\": \"./src/lib/Grandchild.svelte\"\n  }, \"<h3>Grand Child</h3>\\n\")), mdx(\"p\", null, \"Make sure to spin up dev server and access \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3000\"), \" in a browser:\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[1]),\n    alt: \"sveltekit\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h3\", {\n    \"id\": \"using-page-intead-of-load-to-access-stuff\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Using \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"page\"), \" intead of \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"load()\"), \" to access stuff\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#using-page-intead-of-load-to-access-stuff\",\n    \"aria-label\": \"using page intead of load to access stuff permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" is also available to pages, components using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"page stores\"), \". Here is how you do it.\\nChange \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.svelte\"), \" while \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"__layout.svelte\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Grandchild.svelte\"), \" kept same as above:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/routes/index.svelte highlights=2,5,10\",\n    \"file\": \"./src/routes/index.svelte\",\n    \"highlights\": \"2,5,10\"\n  }, \"<script>\\n  import { page } from \\\"$app/stores\\\";\\n  import Grandchild from \\\"$lib/Grandchild.svelte\\\";\\n\\n  export const { parent } = $page.stuff;\\n</script>\\n\\n<h2>Child</h2>\\n\\n<pre>{JSON.stringify(parent)}</pre>\\n\\n<Grandchild />\\n\")), mdx(\"p\", null, \"Make sure to spin up dev server and access \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3000\"), \" in a browser:\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[1]),\n    alt: \"sveltekit\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h2\", {\n    \"id\": \"3-direct-import\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"3. Direct Import\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#3-direct-import\",\n    \"aria-label\": \"3 direct import permalink\",\n    \"className\": \"autolink after\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"p\", null, \"What if you want to access \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"props\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" in a grandchild component directly? Remember that we can't use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"load()\"), \" mainly because it is available to be used in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pages\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"layouts\"), \" only, not in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"components\"), \". Then you can simply use a direct import in a component to access data. That is to import \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"load\"), \" from the layout page and call it as a function in a component.\"), mdx(\"p\", null, \"Now let's go over how we can directly import data from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"__layout.svelte\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Grandchild.svelte\"), \" component.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/routes/__layout.svelte\",\n    \"file\": \"./src/routes/__layout.svelte\"\n  }, \"<script context=\\\"module\\\">\\n  export const parent = { name: \\\"John\\\", email: \\\"john@example.com\\\" };\\n\\n  export const load = () => {\\n    return {\\n      props: {\\n        foo: \\\"bar\\\",\\n      },\\n      stuff: {\\n        parent,\\n      },\\n    };\\n  };\\n</script>\\n\\n<h1>Parent</h1>\\n\\n<slot />\\n\")), mdx(\"p\", null, \"In \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.svelte\"), \", we simply use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"load()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" to access data from the layout page.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/routes/index.svelte\",\n    \"file\": \"./src/routes/index.svelte\"\n  }, \"<script context=\\\"module\\\">\\n  export async function load({ stuff }) {\\n    const { parent } = stuff;\\n\\n    return {\\n      props: {\\n        parent,\\n      },\\n    };\\n  }\\n</script>\\n\\n<script>\\n  import Grandchild from \\\"$lib/Grandchild.svelte\\\";\\n  export let parent;\\n</script>\\n\\n<h2>Child</h2>\\n\\n<pre>{JSON.stringify(parent)}</pre>\\n\\n<Grandchild />\\n\\n\")), mdx(\"p\", null, \"In a grandchild component, instead of using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"load\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stuff\"), \" that are not available for components, you can import data and load function from the layout page and call it inside a component.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/lib/Grandchild.svelte highlights=3,9-11\",\n    \"file\": \"./src/lib/Grandchild.svelte\",\n    \"highlights\": \"3,9-11\"\n  }, \"<script>\\n  // import parent, load directly from the layout page\\n  import { parent, load } from \\\"../routes/__layout.svelte\\\";\\n</script>\\n\\n<h3>Grand Child</h3>\\n\\n// Use parent and call load() directly to access data\\n<pre>parent:{JSON.stringify(parent)}</pre>\\n<pre>props:{JSON.stringify(load().props)}</pre>\\n<pre>props:{JSON.stringify(load().stuff)}</pre>\\n\")), mdx(\"p\", null, \"Make sure to spin up dev server and access \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3000\"), \" in a browser:\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[2]),\n    alt: \"sveltekit\",\n    mdxType: \"GatsbyImage\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#getting-started","title":"Getting Started"},{"url":"#1-context","title":"1. Context"},{"url":"#2-stuff","title":"2. Stuff","items":[{"url":"#using-page-intead-of-load-to-access-stuff","title":"Using page intead of load() to access stuff"}]},{"url":"#3-direct-import","title":"3. Direct Import"}]},"frontmatter":{"title":"How To Pass Data From Layout Page To descendant pages and components In SvelteKit","author":"youngjae lim","category":"SvelteKit","tags":["sveltekit","front-end"],"slug":"how-to-pass-data-from-parents-to-children-in-sveltekit","date":"April 2nd, 2022","readTime":10,"image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#c8c8d8","images":{"fallback":{"src":"/static/ef6330b412157259d89c335cd78fea90/51aea/main_sveltekit.png","srcSet":"/static/ef6330b412157259d89c335cd78fea90/dc6ab/main_sveltekit.png 449w,\n/static/ef6330b412157259d89c335cd78fea90/7fc25/main_sveltekit.png 897w,\n/static/ef6330b412157259d89c335cd78fea90/51aea/main_sveltekit.png 1794w","sizes":"(min-width: 1794px) 1794px, 100vw"},"sources":[{"srcSet":"/static/ef6330b412157259d89c335cd78fea90/86881/main_sveltekit.webp 449w,\n/static/ef6330b412157259d89c335cd78fea90/ecbc7/main_sveltekit.webp 897w,\n/static/ef6330b412157259d89c335cd78fea90/f40c6/main_sveltekit.webp 1794w","type":"image/webp","sizes":"(min-width: 1794px) 1794px, 100vw"}]},"width":1794,"height":1094},"resize":{"src":"/static/ef6330b412157259d89c335cd78fea90/f3583/main_sveltekit.png","width":1200,"height":732}}},"embeddedImages":[{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/000066b53f9d71d1c1d0a6a2528681e9/9db3e/welcome_to_sveltekit.png","srcSet":"/static/000066b53f9d71d1c1d0a6a2528681e9/2e6b9/welcome_to_sveltekit.png 248w,\n/static/000066b53f9d71d1c1d0a6a2528681e9/367f5/welcome_to_sveltekit.png 496w,\n/static/000066b53f9d71d1c1d0a6a2528681e9/9db3e/welcome_to_sveltekit.png 992w","sizes":"(min-width: 992px) 992px, 100vw"},"sources":[{"srcSet":"/static/000066b53f9d71d1c1d0a6a2528681e9/d4e4e/welcome_to_sveltekit.webp 248w,\n/static/000066b53f9d71d1c1d0a6a2528681e9/1acff/welcome_to_sveltekit.webp 496w,\n/static/000066b53f9d71d1c1d0a6a2528681e9/f0618/welcome_to_sveltekit.webp 992w","type":"image/webp","sizes":"(min-width: 992px) 992px, 100vw"}]},"width":992,"height":376}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/05e7c7b890343ecfd17798556f38dba4/6fc63/stuff.png","srcSet":"/static/05e7c7b890343ecfd17798556f38dba4/0291f/stuff.png 108w,\n/static/05e7c7b890343ecfd17798556f38dba4/4eebd/stuff.png 215w,\n/static/05e7c7b890343ecfd17798556f38dba4/6fc63/stuff.png 430w","sizes":"(min-width: 430px) 430px, 100vw"},"sources":[{"srcSet":"/static/05e7c7b890343ecfd17798556f38dba4/71626/stuff.webp 108w,\n/static/05e7c7b890343ecfd17798556f38dba4/64b25/stuff.webp 215w,\n/static/05e7c7b890343ecfd17798556f38dba4/5eace/stuff.webp 430w","type":"image/webp","sizes":"(min-width: 430px) 430px, 100vw"}]},"width":430,"height":188}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/e98b8029c29de4c92a643058a35a9319/2fe1e/direct_import.png","srcSet":"/static/e98b8029c29de4c92a643058a35a9319/1ae43/direct_import.png 120w,\n/static/e98b8029c29de4c92a643058a35a9319/17ef1/direct_import.png 240w,\n/static/e98b8029c29de4c92a643058a35a9319/2fe1e/direct_import.png 480w","sizes":"(min-width: 480px) 480px, 100vw"},"sources":[{"srcSet":"/static/e98b8029c29de4c92a643058a35a9319/ac54a/direct_import.webp 120w,\n/static/e98b8029c29de4c92a643058a35a9319/769c8/direct_import.webp 240w,\n/static/e98b8029c29de4c92a643058a35a9319/3a3a2/direct_import.webp 480w","type":"image/webp","sizes":"(min-width: 480px) 480px, 100vw"}]},"width":480,"height":270}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/0fb223c79ec3d7de252c9039b95528b9/fca4f/context.png","srcSet":"/static/0fb223c79ec3d7de252c9039b95528b9/fbc4a/context.png 89w,\n/static/0fb223c79ec3d7de252c9039b95528b9/eb264/context.png 178w,\n/static/0fb223c79ec3d7de252c9039b95528b9/fca4f/context.png 356w","sizes":"(min-width: 356px) 356px, 100vw"},"sources":[{"srcSet":"/static/0fb223c79ec3d7de252c9039b95528b9/59355/context.webp 89w,\n/static/0fb223c79ec3d7de252c9039b95528b9/ea66e/context.webp 178w,\n/static/0fb223c79ec3d7de252c9039b95528b9/a8e2e/context.webp 356w","type":"image/webp","sizes":"(min-width: 356px) 356px, 100vw"}]},"width":356,"height":235}}}],"videoSourceURL":null,"videoTitle":null},"excerpt":"Overview In the previous article, we went over how to create a standalone endpoint and fetch data from it in a layout and its descendant page. We specifically…"}},"pageContext":{"slug":"how-to-pass-data-from-parents-to-children-in-sveltekit","previousPost":{"id":"6677a57c-b5fe-56c2-984c-3e6aa8ca7bad","frontmatter":{"title":"Data From Endpoint To Layout and Pages In SvelteKit","slug":"data-from-endpoint-to-layouts-to-pages-in-sveltekit","tags":["sveltekit","front-end"]},"excerpt":"Overview In the previous article, we went over three ways to pass data from a parent page(layout page) to a child page and a grandchild…"},"nextPost":null,"relatedPosts":[{"id":"53545235-bfd5-5187-8f0e-4a041efb68bd","frontmatter":{"title":"How To Set Up Tailwind CSS with the SvelteKit","slug":"how-to-setup-tailwind-sveltekit","tags":["sveltekit","tailwindcss","css"]},"excerpt":"Overview This article will show you how to setup  Tailwind CSS  in a  SvelteKit  project. Steps Set up the project and install  taliwindcss…"},{"id":"5af74701-0388-5bee-b670-dbcc890518bd","frontmatter":{"title":"SvelteKit With Headless WordPress as CMS","slug":"sveltekit-with-headless-wordpress-cms","tags":["sveltekit","cms","wordpress","graphql"]},"excerpt":"Overview This article will show you how to get started with development of SvelteKit front-end web application using headless WordPress as a…"},{"id":"6677a57c-b5fe-56c2-984c-3e6aa8ca7bad","frontmatter":{"title":"Data From Endpoint To Layout and Pages In SvelteKit","slug":"data-from-endpoint-to-layouts-to-pages-in-sveltekit","tags":["sveltekit","front-end"]},"excerpt":"Overview In the previous article, we went over three ways to pass data from a parent page(layout page) to a child page and a grandchild…"}]}},"staticQueryHashes":["2325592527","3156252089","3827573359"]}