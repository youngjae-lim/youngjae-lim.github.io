{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/how-to-add-utterances-to-gatsby-blog","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How To Add Utterances Comment System To Your Gatsby Blog\",\n  \"slug\": \"how-to-add-utterances-to-gatsby-blog\",\n  \"image\": \"./images/main_utterances.png\",\n  \"date\": \"2022-03-25T00:00:00.000Z\",\n  \"author\": \"youngjae lim\",\n  \"category\": \"Gatsby\",\n  \"tags\": [\"gatsby\", \"tool\", \"utterances\", \"widget\", \"github\", \"github issues\"],\n  \"readTime\": 10,\n  \"embeddedImages\": [\"./images/utterance_install_1.png\", \"./images/utterance_install_2.png\", \"./images/utterance_success.png\", \"./images/github_secret_key_settings.png\", \"./images/comment_capture.png\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"overview\"\n  }, \"Overview\"), mdx(\"p\", null, \"This article shows you how to add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"utterances\"), \" light weight comments widget to your Gatsby website. The widget is built on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GitHub\"), \" issues.\"), mdx(\"h2\", {\n    \"id\": \"caveats\"\n  }, \"Caveats\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Needs Github authentication by users\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There is no reply functionality\")), mdx(\"h2\", {\n    \"id\": \"what-you-need\"\n  }, \"What you need\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Public Github Repository\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"...\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"file=./src/components/Comments.js highlights=7,11\",\n    \"file\": \"./src/components/Comments.js\",\n    \"highlights\": \"7,11\"\n  }, \"import React, { useEffect } from 'react'\\n\\nconst COMMENTS_ID = 'comments-container'\\n\\nconst Comments = () => {\\n  useEffect(() => {\\n    if (!process.env.GATSBY_COMMENTS_REPO) return\\n\\n    const script = document.createElement('script')\\n    script.src = 'https://utteranc.es/client.js'\\n    script.setAttribute('repo', process.env.GATSBY_COMMENTS_REPO)\\n    script.setAttribute('issue-term', 'pathname')\\n    script.setAttribute('theme', 'icy-dark')\\n    script.setAttribute('crossorigin', 'anonymous')\\n    script.async = true\\n\\n    const comments = document.getElementById(COMMENTS_ID)\\n    if (comments) comments.appendChild(script)\\n\\n    // This function will get called when the component unmounts\\n    // To make sure we don't end up with multiple instances of the comments component\\n    return () => {\\n      const comments = document.getElementById(COMMENTS_ID)\\n      if (comments) comments.innerHTML = ''\\n    }\\n  }, [])\\n\\n  return (\\n    <div>\\n      <h4>Comments</h4>\\n      <div id={COMMENTS_ID} />\\n    </div>\\n  )\\n}\\n\\nexport default Comments\\n\")), mdx(\"h2\", {\n    \"id\": \"setup-gatsby-environment-variable\"\n  }, \"Setup Gatsby Environment Variable\"), mdx(\"h3\", {\n    \"id\": \"for-your-local-development\"\n  }, \"For your local development\"), mdx(\"p\", null, \"Let's add the following codes to the top of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" to use an environment variable in Gatsby:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"file=./gatsby-config.js\",\n    \"file\": \"./gatsby-config.js\"\n  }, \"require('dotenv').config({\\n  path: `.env`,\\n})\\n\")), mdx(\"p\", null, \"Then create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env\"), \" file in your project root and add a key and a value pair to indicate our repo for uttterances comment system:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-dot\",\n    \"metastring\": \"file=./.env\",\n    \"file\": \"./.env\"\n  }, \"GATSBY_COMMENTS_REPO=<github_owner_name>/<github_repository_name_connected_to_utterances>\\n\")), mdx(\"p\", null, \"With this configuration, now the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Comments\"), \" component that we've created above will have access the env variable using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"process.env.GATSBY_COMMENTS_REPO\"), \" syntax. The Post template that imports the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Comments\"), \" component shoudl be able to render the comment without any issues in your local development environment.\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[4]),\n    alt: \"utterance comment\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h3\", {\n    \"id\": \"for-your-production-development\"\n  }, \"For your production development\"), mdx(\"p\", null, \"The above setting definitely works in the dev environment, but how about production environment? We have two concerns to address:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Because we are not pushing our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env\"), \" file to the remote repository by adding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env\"), \" to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".gitignore\"), \" file, we have to add one manually to our Github repository \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Settings\"), \":\"), mdx(\"blockquote\", {\n    display: \"warning\"\n  }, \"Note that pushing .env file with sensitive data to a remote repository is always dangerous practive, so it should be avoided.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Because I publish my site to Github pages using GitHub Actions, the workflows script needs to be able to access and read the environment variable during the deploying process. To set it:\"))), mdx(\"p\", null, \"For those who missed reading my article on how to deploy Gatsby website to github pages using github actions, please refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://youngjae-lim.github.io/posts/how-to-deploy-gatsby-to-github-pages\"\n  }, \"How To Deploy Gatsby Website To GitHub Pages Using GitHub Actions\"), \".\"), mdx(\"h4\", {\n    \"id\": \"add-a-github-secret-key\"\n  }, \"Add a Github Secret Key\"), mdx(\"p\", null, \"Go to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GitHub>Settings\"), \" of your repository and add a secret key:\"), mdx(GatsbyImage, {\n    image: getImage(props.embeddedImages[3]),\n    alt: \"github env variable\",\n    mdxType: \"GatsbyImage\"\n  }), mdx(\"h4\", {\n    \"id\": \"update-github-actions\"\n  }, \"Update Github Actions\"), mdx(\"p\", null, \"Then let's make some changes to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deploy.yml\"), \" that creates the same \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env\"), \" file to the original github actions that I've been using so far:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\",\n    \"metastring\": \"file=./github/workflows/deploy.yml delete=33 add=34-37\",\n    \"file\": \"./github/workflows/deploy.yml\",\n    \"delete\": \"33\",\n    \"add\": \"34-37\"\n  }, \"# This is a basic workflow to help you get started with Actions\\nname: CI\\n\\n# Controls when the action will run.\\non:\\n  # Triggers the workflow on push or pull request events but only for the dev branch\\n  push:\\n    branches: [dev]\\n  pull_request:\\n    branches: [dev]\\n  # Allows you to run this workflow manually from the Actions tab\\n  workflow_dispatch:\\n\\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\\njobs:\\n  # This workflow contains a single job called \\\"build\\\"\\n  build:\\n    # The type of runner that the job will run on\\n    runs-on: ubuntu-latest\\n\\n    # Steps represent a sequence of tasks that will be executed as part of the job\\n    steps:\\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\\n      - uses: actions/checkout@v2\\n\\n      - name: Setup Node.js environment\\n        uses: actions/setup-node@v2.1.5\\n        with:\\n          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0\\n          node-version: 16\\n      - run: npm ci\\n\\n      - run: npm run build --if-present\\n      - run: |\\n          touch .env\\n          echo GATSBY_COMMENTS_REPO=${{ secrets.GATSBY_COMMENTS_REPO }} >> .env\\n          npm run build --if-present\\n\\n      - run: npm test\\n\\n      - name: Deploy to GitHub Pages\\n        uses: JamesIves/github-pages-deploy-action@v4.2.5\\n        with:\\n          branch: gh-pages # The branch the action should deploy to.\\n          folder: public # The folder the action should deploy.\\n\")), mdx(Link, {\n    to: \"/posts\",\n    className: \"btn center-btn\",\n    mdxType: \"Link\"\n  }, \"all posts\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#overview","title":"Overview"},{"url":"#caveats","title":"Caveats"},{"url":"#what-you-need","title":"What you need"},{"url":"#setup-gatsby-environment-variable","title":"Setup Gatsby Environment Variable","items":[{"url":"#for-your-local-development","title":"For your local development"},{"url":"#for-your-production-development","title":"For your production development","items":[{"url":"#add-a-github-secret-key","title":"Add a Github Secret Key"},{"url":"#update-github-actions","title":"Update Github Actions"}]}]}]},"frontmatter":{"title":"How To Add Utterances Comment System To Your Gatsby Blog","author":"youngjae lim","category":"Gatsby","tags":["gatsby","tool","utterances","widget","github","github issues"],"slug":"how-to-add-utterances-to-gatsby-blog","date":"March 25th, 2022","readTime":10,"image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/b9408bc6d09ae79137f034ef4ce05246/391e5/main_utterances.png","srcSet":"/static/b9408bc6d09ae79137f034ef4ce05246/7f64b/main_utterances.png 326w,\n/static/b9408bc6d09ae79137f034ef4ce05246/8eb61/main_utterances.png 651w,\n/static/b9408bc6d09ae79137f034ef4ce05246/391e5/main_utterances.png 1302w","sizes":"(min-width: 1302px) 1302px, 100vw"},"sources":[{"srcSet":"/static/b9408bc6d09ae79137f034ef4ce05246/62b35/main_utterances.webp 326w,\n/static/b9408bc6d09ae79137f034ef4ce05246/1a754/main_utterances.webp 651w,\n/static/b9408bc6d09ae79137f034ef4ce05246/03f85/main_utterances.webp 1302w","type":"image/webp","sizes":"(min-width: 1302px) 1302px, 100vw"}]},"width":1302,"height":592}}},"embeddedImages":[{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182828","images":{"fallback":{"src":"/static/6269ab51c6816832a8d2a98143047c47/d87cf/utterance_install_1.png","srcSet":"/static/6269ab51c6816832a8d2a98143047c47/8187e/utterance_install_1.png 468w,\n/static/6269ab51c6816832a8d2a98143047c47/c24dc/utterance_install_1.png 935w,\n/static/6269ab51c6816832a8d2a98143047c47/d87cf/utterance_install_1.png 1870w","sizes":"(min-width: 1870px) 1870px, 100vw"},"sources":[{"srcSet":"/static/6269ab51c6816832a8d2a98143047c47/69b6c/utterance_install_1.webp 468w,\n/static/6269ab51c6816832a8d2a98143047c47/67add/utterance_install_1.webp 935w,\n/static/6269ab51c6816832a8d2a98143047c47/1e3d6/utterance_install_1.webp 1870w","type":"image/webp","sizes":"(min-width: 1870px) 1870px, 100vw"}]},"width":1870,"height":912}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282838","images":{"fallback":{"src":"/static/dde54491aea7a6bbd72de222f91f80d2/021c6/utterance_install_2.png","srcSet":"/static/dde54491aea7a6bbd72de222f91f80d2/dc42e/utterance_install_2.png 465w,\n/static/dde54491aea7a6bbd72de222f91f80d2/11171/utterance_install_2.png 929w,\n/static/dde54491aea7a6bbd72de222f91f80d2/021c6/utterance_install_2.png 1858w","sizes":"(min-width: 1858px) 1858px, 100vw"},"sources":[{"srcSet":"/static/dde54491aea7a6bbd72de222f91f80d2/ee8da/utterance_install_2.webp 465w,\n/static/dde54491aea7a6bbd72de222f91f80d2/b5ae0/utterance_install_2.webp 929w,\n/static/dde54491aea7a6bbd72de222f91f80d2/8301c/utterance_install_2.webp 1858w","type":"image/webp","sizes":"(min-width: 1858px) 1858px, 100vw"}]},"width":1858,"height":1662}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282838","images":{"fallback":{"src":"/static/f605d12ba860e58d526d313490440d63/892de/utterance_success.png","srcSet":"/static/f605d12ba860e58d526d313490440d63/4d535/utterance_success.png 391w,\n/static/f605d12ba860e58d526d313490440d63/b445b/utterance_success.png 781w,\n/static/f605d12ba860e58d526d313490440d63/892de/utterance_success.png 1562w","sizes":"(min-width: 1562px) 1562px, 100vw"},"sources":[{"srcSet":"/static/f605d12ba860e58d526d313490440d63/d39d2/utterance_success.webp 391w,\n/static/f605d12ba860e58d526d313490440d63/cc113/utterance_success.webp 781w,\n/static/f605d12ba860e58d526d313490440d63/8bf00/utterance_success.webp 1562w","type":"image/webp","sizes":"(min-width: 1562px) 1562px, 100vw"}]},"width":1562,"height":864}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#182828","images":{"fallback":{"src":"/static/0c91edbf3d36c0601c0e66b4398ef2d3/609de/github_secret_key_settings.png","srcSet":"/static/0c91edbf3d36c0601c0e66b4398ef2d3/3d25b/github_secret_key_settings.png 283w,\n/static/0c91edbf3d36c0601c0e66b4398ef2d3/3b5b2/github_secret_key_settings.png 566w,\n/static/0c91edbf3d36c0601c0e66b4398ef2d3/609de/github_secret_key_settings.png 1132w","sizes":"(min-width: 1132px) 1132px, 100vw"},"sources":[{"srcSet":"/static/0c91edbf3d36c0601c0e66b4398ef2d3/461cf/github_secret_key_settings.webp 283w,\n/static/0c91edbf3d36c0601c0e66b4398ef2d3/36b8a/github_secret_key_settings.webp 566w,\n/static/0c91edbf3d36c0601c0e66b4398ef2d3/517c1/github_secret_key_settings.webp 1132w","type":"image/webp","sizes":"(min-width: 1132px) 1132px, 100vw"}]},"width":1132,"height":710}}},{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282838","images":{"fallback":{"src":"/static/1351a88060016c57d210f19937a65dae/df88e/comment_capture.png","srcSet":"/static/1351a88060016c57d210f19937a65dae/a1685/comment_capture.png 188w,\n/static/1351a88060016c57d210f19937a65dae/903e8/comment_capture.png 377w,\n/static/1351a88060016c57d210f19937a65dae/df88e/comment_capture.png 753w","sizes":"(min-width: 753px) 753px, 100vw"},"sources":[{"srcSet":"/static/1351a88060016c57d210f19937a65dae/fb511/comment_capture.webp 188w,\n/static/1351a88060016c57d210f19937a65dae/151dd/comment_capture.webp 377w,\n/static/1351a88060016c57d210f19937a65dae/c219d/comment_capture.webp 753w","type":"image/webp","sizes":"(min-width: 753px) 753px, 100vw"}]},"width":753,"height":435}}}],"videoSourceURL":null,"videoTitle":null},"excerpt":"Overview This article shows you how to add  utterances  light weight comments widget to your Gatsby website. The widget is built on  GitHub  issues. Caveats…"}},"pageContext":{"slug":"how-to-add-utterances-to-gatsby-blog","previousPost":{"id":"fa7f6f3d-fd5d-539d-ae63-223b3cda2787","frontmatter":{"title":"Bank of Useful Vim Commands","slug":"bank-of-useful-vim-commands"},"excerpt":"Overview This article shows you some useful vim commands that I enjoy using particularly when I code. I will add more commands once in a…"},"nextPost":{"id":"8bafe2b9-d9d6-5261-aa80-49e53f20cc2a","frontmatter":{"title":"How To Add Social Share Buttons To Gatsby Blog","slug":"how-to-add-social-share-buttons-to-gatsby-blog"},"excerpt":"Overview This article shows you how to add social share buttons to your Gatsby blog post.  Why you need social share buttons What you need…"}}},"staticQueryHashes":["2325592527","3156252089","3827573359"]}