{"version":3,"sources":["webpack://youngjae-lim.github.io/./src/templates/project-template.js"],"names":["data","url","window","location","href","pathName","pathname","mdx","frontmatter","image","title","tags","date","embeddedImages","videoSourceURL","videoTitle","body","tableOfContents","excerpt","description","isThereTableOfContent","Object","keys","length","childImageSharp","resize","Wrapper","toc","items","className","G","getImage","alt","isPost","MDXRenderer","styled","props"],"mappings":"iPAkFA,UAtEwB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACnBC,EAAwB,oBAAXC,OAAyBA,OAAOC,SAASC,KAAO,GAC7DC,EAA6B,oBAAXH,OAAyBA,OAAOC,SAASG,SAAW,GAFxC,EAYhCN,EAAKO,IAAIC,YAPXC,EALkC,EAKlCA,MACAC,EANkC,EAMlCA,MACAC,EAPkC,EAOlCA,KACAC,EARkC,EAQlCA,KACAC,EATkC,EASlCA,eACAC,EAVkC,EAUlCA,eACAC,EAXkC,EAWlCA,WAXkC,EAcOf,EAAKO,IAAxCS,EAd4B,EAc5BA,KAAMC,EAdsB,EActBA,gBAAiBC,EAdK,EAcLA,QAEzBC,EAAcT,GAAgBQ,EAE9BE,EAAgE,IAAxCC,OAAOC,KAAKL,GAAiBM,OAE3D,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEb,MAAOA,EACPS,YAAaD,EACbT,MAAOA,EAAMe,gBAAgBC,OAC7BnB,SAAUD,IAEZ,gBAACqB,EAAD,CAASC,IAAKP,GAEXA,GACC,gBAAC,IAAD,CAAiBQ,MAAOX,EAAgBW,QAG1C,2BAASC,UAAU,YACjB,gBAAC,EAAAC,EAAD,CACErB,OAAOsB,OAAStB,GAChBuB,IAAKtB,EACLmB,UAAU,aAEZ,uBAAKA,UAAU,aACb,0BAAKnB,IACJC,aAAA,EAAAA,EAAMY,QAAS,GAAK,gBAAC,IAAD,CAAUZ,KAAMA,EAAMsB,QAAQ,IACnD,yBAAIrB,GACJ,uBAAKiB,UAAU,cACf,uBAAKA,UAAU,sBACb,gBAAC,IAAD,CAAoB5B,IAAKA,EAAKkB,YAAaA,MAG/C,gBAAC,EAAAe,YAAD,CACErB,eAAgBA,EAChBC,eAAgBA,EAChBC,WAAYA,GAEXC,GAEH,uBAAKa,UAAU,kBACb,qFACA,gBAAC,IAAD,CAAoB5B,IAAKA,EAAKkB,YAAaA,MAI/C,+BACE,gBAAC,IAAD,CAAQc,QAAQ,QASnB,IAoCDP,EAAUS,wBAAH,iEAAGA,CAAH,q0BAGE,SAAAC,GAAK,OAAKA,EAAMT,IAAM,SAAW,YAgEjB,SAAAS,GAAK,OAC5BA,EAAMT,IAAM,kBAAoB","file":"component---src-templates-project-template-js-88a5107c399c2e7f30bb.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/Layout'\nimport TableOfContents from '../components/TableOfContents'\nimport Seo from '../components/Seo'\nimport TagsList from '../components/TagsList'\nimport SocialShareButtons from '../components/SocialShareButtons'\nimport styled from 'styled-components'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport Banner from '../components/Banner'\nimport { graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nconst ProjectTemplate = ({ data }) => {\n  const url = typeof window !== 'undefined' ? window.location.href : ''\n  const pathName = typeof window !== 'undefined' ? window.location.pathname : ''\n\n  const {\n    image,\n    title,\n    tags,\n    date,\n    embeddedImages,\n    videoSourceURL,\n    videoTitle,\n  } = data.mdx.frontmatter\n\n  const { body, tableOfContents, excerpt } = data.mdx\n\n  const description = title ? title : excerpt\n\n  const isThereTableOfContent = Object.keys(tableOfContents).length !== 0\n\n  return (\n    <Layout>\n      <Seo\n        title={title}\n        description={excerpt}\n        image={image.childImageSharp.resize}\n        pathname={pathName}\n      />\n      <Wrapper toc={isThereTableOfContent}>\n        {/* Table of Contents */}\n        {isThereTableOfContent && (\n          <TableOfContents items={tableOfContents.items} />\n        )}\n        {/* Post Info */}\n        <article className='mdx-page'>\n          <GatsbyImage\n            image={getImage(image)}\n            alt={title}\n            className='main-img'\n          />\n          <div className='post-info'>\n            <h2>{title}</h2>\n            {tags?.length > 0 && <TagsList tags={tags} isPost={true} />}\n            <p>{date}</p>\n            <div className='underline'></div>\n            <div className='social-buttons-top'>\n              <SocialShareButtons url={url} description={description} />\n            </div>\n          </div>\n          <MDXRenderer\n            embeddedImages={embeddedImages}\n            videoSourceURL={videoSourceURL}\n            videoTitle={videoTitle}\n          >\n            {body}\n          </MDXRenderer>\n          <div className='social-buttons'>\n            <span>If you found this article informative, please share: </span>\n            <SocialShareButtons url={url} description={description} />\n          </div>\n        </article>\n        {/* Banner on the right side */}\n        <article>\n          <Banner isPost={true} />\n        </article>\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport default ProjectTemplate\n\nexport const query = graphql`\n  query GetSingleProjectBySlug($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      body\n      tableOfContents\n      frontmatter {\n        title\n        author\n        category\n        tags\n        slug\n        date(formatString: \"MMMM Do, YYYY\")\n        readTime\n        image {\n          childImageSharp {\n            gatsbyImageData\n            resize(width: 1200) {\n              src\n              width\n              height\n            }\n          }\n        }\n        embeddedImages {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        videoSourceURL\n        videoTitle\n      }\n      excerpt(pruneLength: 160)\n    }\n  }\n`\n\nconst Wrapper = styled.section`\n  display: grid;\n  width: 90vw;\n  max-width: ${props => (props.toc ? '1600px' : '1100px')};\n  margin: 4rem auto 4rem;\n\n  /* article { */\n  /*   margin: 4rem auto; */\n  /* } */\n\n  .post-info {\n    margin: 2rem 0 3rem 0;\n    text-align: center;\n    span {\n      background: var(--clr-green-1);\n      color: black;\n      border-radius: var(--radius);\n      padding: 0.25rem 0.5rem;\n      text-transform: uppercase;\n      letter-spacing: var(--spacing);\n    }\n    h1 {\n      margin: 1.25rem 0;\n      font-weight: 900;\n    }\n    p {\n      color: var(--clr-white);\n    }\n    .underline {\n      width: 5rem;\n      height: 1px;\n      background: var(--clr-grey-9);\n      margin: 0 auto;\n      margin-bottom: 1rem;\n    }\n  }\n\n  .social-buttons-top {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n  }\n\n  .social-buttons {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    gap: 1rem;\n    font-size: 1.6rem;\n  }\n\n  @media (min-width: 992px) {\n    & {\n      display: grid;\n      width: 92vw;\n    }\n    .main-img {\n      width: 100%;\n      display: block;\n      margin: 0 auto;\n    }\n  }\n  @media (min-width: 1170px) {\n    & {\n      display: grid;\n      grid-template-columns: ${props =>\n        props.toc ? '380px 1fr 200px' : '1fr 300px'};\n      column-gap: 4rem;\n      justify-content: space-around;\n    }\n  }\n`\n"],"sourceRoot":""}